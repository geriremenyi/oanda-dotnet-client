/* 
 * OANDA v20 API
 *
 * The full OANDA v20 API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = GeriRemenyi.Oanda.V20.Client.Client.OpenAPIDateConverter;

namespace GeriRemenyi.Oanda.V20.Client.Model
{
    /// <summary>
    /// A ClientConfigureRejectTransaction represents the reject of configuration of an Account by a client.
    /// </summary>
    [DataContract]
    public partial class ClientConfigureRejectTransaction :  IEquatable<ClientConfigureRejectTransaction>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public TransactionType? Type { get; set; }
        /// <summary>
        /// The reason that the Reject Transaction was created
        /// </summary>
        /// <value>The reason that the Reject Transaction was created</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RejectReasonEnum
        {
            /// <summary>
            /// Enum INTERNAL_SERVER_ERROR for value: INTERNAL_SERVER_ERROR
            /// </summary>
            [EnumMember(Value = "INTERNAL_SERVER_ERROR")]
            INTERNAL_SERVER_ERROR = 1,

            /// <summary>
            /// Enum INSTRUMENT_PRICE_UNKNOWN for value: INSTRUMENT_PRICE_UNKNOWN
            /// </summary>
            [EnumMember(Value = "INSTRUMENT_PRICE_UNKNOWN")]
            INSTRUMENT_PRICE_UNKNOWN = 2,

            /// <summary>
            /// Enum ACCOUNT_NOT_ACTIVE for value: ACCOUNT_NOT_ACTIVE
            /// </summary>
            [EnumMember(Value = "ACCOUNT_NOT_ACTIVE")]
            ACCOUNT_NOT_ACTIVE = 3,

            /// <summary>
            /// Enum ACCOUNT_LOCKED for value: ACCOUNT_LOCKED
            /// </summary>
            [EnumMember(Value = "ACCOUNT_LOCKED")]
            ACCOUNT_LOCKED = 4,

            /// <summary>
            /// Enum ACCOUNT_ORDER_CREATION_LOCKED for value: ACCOUNT_ORDER_CREATION_LOCKED
            /// </summary>
            [EnumMember(Value = "ACCOUNT_ORDER_CREATION_LOCKED")]
            ACCOUNT_ORDER_CREATION_LOCKED = 5,

            /// <summary>
            /// Enum ACCOUNT_CONFIGURATION_LOCKED for value: ACCOUNT_CONFIGURATION_LOCKED
            /// </summary>
            [EnumMember(Value = "ACCOUNT_CONFIGURATION_LOCKED")]
            ACCOUNT_CONFIGURATION_LOCKED = 6,

            /// <summary>
            /// Enum ACCOUNT_DEPOSIT_LOCKED for value: ACCOUNT_DEPOSIT_LOCKED
            /// </summary>
            [EnumMember(Value = "ACCOUNT_DEPOSIT_LOCKED")]
            ACCOUNT_DEPOSIT_LOCKED = 7,

            /// <summary>
            /// Enum ACCOUNT_WITHDRAWAL_LOCKED for value: ACCOUNT_WITHDRAWAL_LOCKED
            /// </summary>
            [EnumMember(Value = "ACCOUNT_WITHDRAWAL_LOCKED")]
            ACCOUNT_WITHDRAWAL_LOCKED = 8,

            /// <summary>
            /// Enum ACCOUNT_ORDER_CANCEL_LOCKED for value: ACCOUNT_ORDER_CANCEL_LOCKED
            /// </summary>
            [EnumMember(Value = "ACCOUNT_ORDER_CANCEL_LOCKED")]
            ACCOUNT_ORDER_CANCEL_LOCKED = 9,

            /// <summary>
            /// Enum INSTRUMENT_NOT_TRADEABLE for value: INSTRUMENT_NOT_TRADEABLE
            /// </summary>
            [EnumMember(Value = "INSTRUMENT_NOT_TRADEABLE")]
            INSTRUMENT_NOT_TRADEABLE = 10,

            /// <summary>
            /// Enum PENDING_ORDERS_ALLOWED_EXCEEDED for value: PENDING_ORDERS_ALLOWED_EXCEEDED
            /// </summary>
            [EnumMember(Value = "PENDING_ORDERS_ALLOWED_EXCEEDED")]
            PENDING_ORDERS_ALLOWED_EXCEEDED = 11,

            /// <summary>
            /// Enum ORDER_ID_UNSPECIFIED for value: ORDER_ID_UNSPECIFIED
            /// </summary>
            [EnumMember(Value = "ORDER_ID_UNSPECIFIED")]
            ORDER_ID_UNSPECIFIED = 12,

            /// <summary>
            /// Enum ORDER_DOESNT_EXIST for value: ORDER_DOESNT_EXIST
            /// </summary>
            [EnumMember(Value = "ORDER_DOESNT_EXIST")]
            ORDER_DOESNT_EXIST = 13,

            /// <summary>
            /// Enum ORDER_IDENTIFIER_INCONSISTENCY for value: ORDER_IDENTIFIER_INCONSISTENCY
            /// </summary>
            [EnumMember(Value = "ORDER_IDENTIFIER_INCONSISTENCY")]
            ORDER_IDENTIFIER_INCONSISTENCY = 14,

            /// <summary>
            /// Enum TRADE_ID_UNSPECIFIED for value: TRADE_ID_UNSPECIFIED
            /// </summary>
            [EnumMember(Value = "TRADE_ID_UNSPECIFIED")]
            TRADE_ID_UNSPECIFIED = 15,

            /// <summary>
            /// Enum TRADE_DOESNT_EXIST for value: TRADE_DOESNT_EXIST
            /// </summary>
            [EnumMember(Value = "TRADE_DOESNT_EXIST")]
            TRADE_DOESNT_EXIST = 16,

            /// <summary>
            /// Enum TRADE_IDENTIFIER_INCONSISTENCY for value: TRADE_IDENTIFIER_INCONSISTENCY
            /// </summary>
            [EnumMember(Value = "TRADE_IDENTIFIER_INCONSISTENCY")]
            TRADE_IDENTIFIER_INCONSISTENCY = 17,

            /// <summary>
            /// Enum INSUFFICIENT_MARGIN for value: INSUFFICIENT_MARGIN
            /// </summary>
            [EnumMember(Value = "INSUFFICIENT_MARGIN")]
            INSUFFICIENT_MARGIN = 18,

            /// <summary>
            /// Enum INSTRUMENT_MISSING for value: INSTRUMENT_MISSING
            /// </summary>
            [EnumMember(Value = "INSTRUMENT_MISSING")]
            INSTRUMENT_MISSING = 19,

            /// <summary>
            /// Enum INSTRUMENT_UNKNOWN for value: INSTRUMENT_UNKNOWN
            /// </summary>
            [EnumMember(Value = "INSTRUMENT_UNKNOWN")]
            INSTRUMENT_UNKNOWN = 20,

            /// <summary>
            /// Enum UNITS_MISSING for value: UNITS_MISSING
            /// </summary>
            [EnumMember(Value = "UNITS_MISSING")]
            UNITS_MISSING = 21,

            /// <summary>
            /// Enum UNITS_INVALID for value: UNITS_INVALID
            /// </summary>
            [EnumMember(Value = "UNITS_INVALID")]
            UNITS_INVALID = 22,

            /// <summary>
            /// Enum UNITS_PRECISION_EXCEEDED for value: UNITS_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "UNITS_PRECISION_EXCEEDED")]
            UNITS_PRECISION_EXCEEDED = 23,

            /// <summary>
            /// Enum UNITS_LIMIT_EXCEEDED for value: UNITS_LIMIT_EXCEEDED
            /// </summary>
            [EnumMember(Value = "UNITS_LIMIT_EXCEEDED")]
            UNITS_LIMIT_EXCEEDED = 24,

            /// <summary>
            /// Enum UNITS_MIMIMUM_NOT_MET for value: UNITS_MIMIMUM_NOT_MET
            /// </summary>
            [EnumMember(Value = "UNITS_MIMIMUM_NOT_MET")]
            UNITS_MIMIMUM_NOT_MET = 25,

            /// <summary>
            /// Enum PRICE_MISSING for value: PRICE_MISSING
            /// </summary>
            [EnumMember(Value = "PRICE_MISSING")]
            PRICE_MISSING = 26,

            /// <summary>
            /// Enum PRICE_INVALID for value: PRICE_INVALID
            /// </summary>
            [EnumMember(Value = "PRICE_INVALID")]
            PRICE_INVALID = 27,

            /// <summary>
            /// Enum PRICE_PRECISION_EXCEEDED for value: PRICE_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "PRICE_PRECISION_EXCEEDED")]
            PRICE_PRECISION_EXCEEDED = 28,

            /// <summary>
            /// Enum PRICE_DISTANCE_MISSING for value: PRICE_DISTANCE_MISSING
            /// </summary>
            [EnumMember(Value = "PRICE_DISTANCE_MISSING")]
            PRICE_DISTANCE_MISSING = 29,

            /// <summary>
            /// Enum PRICE_DISTANCE_INVALID for value: PRICE_DISTANCE_INVALID
            /// </summary>
            [EnumMember(Value = "PRICE_DISTANCE_INVALID")]
            PRICE_DISTANCE_INVALID = 30,

            /// <summary>
            /// Enum PRICE_DISTANCE_PRECISION_EXCEEDED for value: PRICE_DISTANCE_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "PRICE_DISTANCE_PRECISION_EXCEEDED")]
            PRICE_DISTANCE_PRECISION_EXCEEDED = 31,

            /// <summary>
            /// Enum PRICE_DISTANCE_MAXIMUM_EXCEEDED for value: PRICE_DISTANCE_MAXIMUM_EXCEEDED
            /// </summary>
            [EnumMember(Value = "PRICE_DISTANCE_MAXIMUM_EXCEEDED")]
            PRICE_DISTANCE_MAXIMUM_EXCEEDED = 32,

            /// <summary>
            /// Enum PRICE_DISTANCE_MINIMUM_NOT_MET for value: PRICE_DISTANCE_MINIMUM_NOT_MET
            /// </summary>
            [EnumMember(Value = "PRICE_DISTANCE_MINIMUM_NOT_MET")]
            PRICE_DISTANCE_MINIMUM_NOT_MET = 33,

            /// <summary>
            /// Enum TIME_IN_FORCE_MISSING for value: TIME_IN_FORCE_MISSING
            /// </summary>
            [EnumMember(Value = "TIME_IN_FORCE_MISSING")]
            TIME_IN_FORCE_MISSING = 34,

            /// <summary>
            /// Enum TIME_IN_FORCE_INVALID for value: TIME_IN_FORCE_INVALID
            /// </summary>
            [EnumMember(Value = "TIME_IN_FORCE_INVALID")]
            TIME_IN_FORCE_INVALID = 35,

            /// <summary>
            /// Enum TIME_IN_FORCE_GTD_TIMESTAMP_MISSING for value: TIME_IN_FORCE_GTD_TIMESTAMP_MISSING
            /// </summary>
            [EnumMember(Value = "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING")]
            TIME_IN_FORCE_GTD_TIMESTAMP_MISSING = 36,

            /// <summary>
            /// Enum TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST for value: TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST
            /// </summary>
            [EnumMember(Value = "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST")]
            TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST = 37,

            /// <summary>
            /// Enum PRICE_BOUND_INVALID for value: PRICE_BOUND_INVALID
            /// </summary>
            [EnumMember(Value = "PRICE_BOUND_INVALID")]
            PRICE_BOUND_INVALID = 38,

            /// <summary>
            /// Enum PRICE_BOUND_PRECISION_EXCEEDED for value: PRICE_BOUND_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "PRICE_BOUND_PRECISION_EXCEEDED")]
            PRICE_BOUND_PRECISION_EXCEEDED = 39,

            /// <summary>
            /// Enum ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS for value: ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS
            /// </summary>
            [EnumMember(Value = "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS")]
            ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS = 40,

            /// <summary>
            /// Enum TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED for value: TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED
            /// </summary>
            [EnumMember(Value = "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED")]
            TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED = 41,

            /// <summary>
            /// Enum CLIENT_ORDER_ID_INVALID for value: CLIENT_ORDER_ID_INVALID
            /// </summary>
            [EnumMember(Value = "CLIENT_ORDER_ID_INVALID")]
            CLIENT_ORDER_ID_INVALID = 42,

            /// <summary>
            /// Enum CLIENT_ORDER_ID_ALREADY_EXISTS for value: CLIENT_ORDER_ID_ALREADY_EXISTS
            /// </summary>
            [EnumMember(Value = "CLIENT_ORDER_ID_ALREADY_EXISTS")]
            CLIENT_ORDER_ID_ALREADY_EXISTS = 43,

            /// <summary>
            /// Enum CLIENT_ORDER_TAG_INVALID for value: CLIENT_ORDER_TAG_INVALID
            /// </summary>
            [EnumMember(Value = "CLIENT_ORDER_TAG_INVALID")]
            CLIENT_ORDER_TAG_INVALID = 44,

            /// <summary>
            /// Enum CLIENT_ORDER_COMMENT_INVALID for value: CLIENT_ORDER_COMMENT_INVALID
            /// </summary>
            [EnumMember(Value = "CLIENT_ORDER_COMMENT_INVALID")]
            CLIENT_ORDER_COMMENT_INVALID = 45,

            /// <summary>
            /// Enum CLIENT_TRADE_ID_INVALID for value: CLIENT_TRADE_ID_INVALID
            /// </summary>
            [EnumMember(Value = "CLIENT_TRADE_ID_INVALID")]
            CLIENT_TRADE_ID_INVALID = 46,

            /// <summary>
            /// Enum CLIENT_TRADE_ID_ALREADY_EXISTS for value: CLIENT_TRADE_ID_ALREADY_EXISTS
            /// </summary>
            [EnumMember(Value = "CLIENT_TRADE_ID_ALREADY_EXISTS")]
            CLIENT_TRADE_ID_ALREADY_EXISTS = 47,

            /// <summary>
            /// Enum CLIENT_TRADE_TAG_INVALID for value: CLIENT_TRADE_TAG_INVALID
            /// </summary>
            [EnumMember(Value = "CLIENT_TRADE_TAG_INVALID")]
            CLIENT_TRADE_TAG_INVALID = 48,

            /// <summary>
            /// Enum CLIENT_TRADE_COMMENT_INVALID for value: CLIENT_TRADE_COMMENT_INVALID
            /// </summary>
            [EnumMember(Value = "CLIENT_TRADE_COMMENT_INVALID")]
            CLIENT_TRADE_COMMENT_INVALID = 49,

            /// <summary>
            /// Enum ORDER_FILL_POSITION_ACTION_MISSING for value: ORDER_FILL_POSITION_ACTION_MISSING
            /// </summary>
            [EnumMember(Value = "ORDER_FILL_POSITION_ACTION_MISSING")]
            ORDER_FILL_POSITION_ACTION_MISSING = 50,

            /// <summary>
            /// Enum ORDER_FILL_POSITION_ACTION_INVALID for value: ORDER_FILL_POSITION_ACTION_INVALID
            /// </summary>
            [EnumMember(Value = "ORDER_FILL_POSITION_ACTION_INVALID")]
            ORDER_FILL_POSITION_ACTION_INVALID = 51,

            /// <summary>
            /// Enum TRIGGER_CONDITION_MISSING for value: TRIGGER_CONDITION_MISSING
            /// </summary>
            [EnumMember(Value = "TRIGGER_CONDITION_MISSING")]
            TRIGGER_CONDITION_MISSING = 52,

            /// <summary>
            /// Enum TRIGGER_CONDITION_INVALID for value: TRIGGER_CONDITION_INVALID
            /// </summary>
            [EnumMember(Value = "TRIGGER_CONDITION_INVALID")]
            TRIGGER_CONDITION_INVALID = 53,

            /// <summary>
            /// Enum ORDER_PARTIAL_FILL_OPTION_MISSING for value: ORDER_PARTIAL_FILL_OPTION_MISSING
            /// </summary>
            [EnumMember(Value = "ORDER_PARTIAL_FILL_OPTION_MISSING")]
            ORDER_PARTIAL_FILL_OPTION_MISSING = 54,

            /// <summary>
            /// Enum ORDER_PARTIAL_FILL_OPTION_INVALID for value: ORDER_PARTIAL_FILL_OPTION_INVALID
            /// </summary>
            [EnumMember(Value = "ORDER_PARTIAL_FILL_OPTION_INVALID")]
            ORDER_PARTIAL_FILL_OPTION_INVALID = 55,

            /// <summary>
            /// Enum INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL for value: INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL
            /// </summary>
            [EnumMember(Value = "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL")]
            INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL = 56,

            /// <summary>
            /// Enum TAKE_PROFIT_ORDER_ALREADY_EXISTS for value: TAKE_PROFIT_ORDER_ALREADY_EXISTS
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ORDER_ALREADY_EXISTS")]
            TAKE_PROFIT_ORDER_ALREADY_EXISTS = 57,

            /// <summary>
            /// Enum TAKE_PROFIT_ON_FILL_PRICE_MISSING for value: TAKE_PROFIT_ON_FILL_PRICE_MISSING
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_PRICE_MISSING")]
            TAKE_PROFIT_ON_FILL_PRICE_MISSING = 58,

            /// <summary>
            /// Enum TAKE_PROFIT_ON_FILL_PRICE_INVALID for value: TAKE_PROFIT_ON_FILL_PRICE_INVALID
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_PRICE_INVALID")]
            TAKE_PROFIT_ON_FILL_PRICE_INVALID = 59,

            /// <summary>
            /// Enum TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED for value: TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED")]
            TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED = 60,

            /// <summary>
            /// Enum TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING for value: TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING")]
            TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING = 61,

            /// <summary>
            /// Enum TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID for value: TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID")]
            TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID = 62,

            /// <summary>
            /// Enum TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING for value: TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING")]
            TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING = 63,

            /// <summary>
            /// Enum TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST for value: TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST")]
            TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST = 64,

            /// <summary>
            /// Enum TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID for value: TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID")]
            TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID = 65,

            /// <summary>
            /// Enum TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID for value: TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID")]
            TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID = 66,

            /// <summary>
            /// Enum TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID for value: TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID")]
            TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID = 67,

            /// <summary>
            /// Enum TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING for value: TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING")]
            TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING = 68,

            /// <summary>
            /// Enum TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID for value: TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID")]
            TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID = 69,

            /// <summary>
            /// Enum STOP_LOSS_ORDER_ALREADY_EXISTS for value: STOP_LOSS_ORDER_ALREADY_EXISTS
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_ALREADY_EXISTS")]
            STOP_LOSS_ORDER_ALREADY_EXISTS = 70,

            /// <summary>
            /// Enum STOP_LOSS_ORDER_GUARANTEED_REQUIRED for value: STOP_LOSS_ORDER_GUARANTEED_REQUIRED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_REQUIRED")]
            STOP_LOSS_ORDER_GUARANTEED_REQUIRED = 71,

            /// <summary>
            /// Enum STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD for value: STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD")]
            STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD = 72,

            /// <summary>
            /// Enum STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED for value: STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED")]
            STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED = 73,

            /// <summary>
            /// Enum STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION for value: STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION")]
            STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION = 74,

            /// <summary>
            /// Enum STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION for value: STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION")]
            STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION = 75,

            /// <summary>
            /// Enum STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED for value: STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED")]
            STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED = 76,

            /// <summary>
            /// Enum STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET for value: STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET")]
            STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET = 77,

            /// <summary>
            /// Enum STOP_LOSS_ORDER_NOT_CANCELABLE for value: STOP_LOSS_ORDER_NOT_CANCELABLE
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_NOT_CANCELABLE")]
            STOP_LOSS_ORDER_NOT_CANCELABLE = 78,

            /// <summary>
            /// Enum STOP_LOSS_ORDER_NOT_REPLACEABLE for value: STOP_LOSS_ORDER_NOT_REPLACEABLE
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_NOT_REPLACEABLE")]
            STOP_LOSS_ORDER_NOT_REPLACEABLE = 79,

            /// <summary>
            /// Enum STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED for value: STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED")]
            STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED = 80,

            /// <summary>
            /// Enum STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED for value: STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED")]
            STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED = 81,

            /// <summary>
            /// Enum STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING for value: STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING")]
            STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING = 82,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER for value: STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER")]
            STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER = 83,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED for value: STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED")]
            STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED = 84,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED for value: STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED")]
            STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED = 85,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_PRICE_MISSING for value: STOP_LOSS_ON_FILL_PRICE_MISSING
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_PRICE_MISSING")]
            STOP_LOSS_ON_FILL_PRICE_MISSING = 86,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_PRICE_INVALID for value: STOP_LOSS_ON_FILL_PRICE_INVALID
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_PRICE_INVALID")]
            STOP_LOSS_ON_FILL_PRICE_INVALID = 87,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED for value: STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED")]
            STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED = 88,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET for value: STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET")]
            STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET = 89,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED for value: STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED")]
            STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED = 90,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_DISTANCE_INVALID for value: STOP_LOSS_ON_FILL_DISTANCE_INVALID
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_DISTANCE_INVALID")]
            STOP_LOSS_ON_FILL_DISTANCE_INVALID = 91,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED for value: STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED")]
            STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED = 92,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED for value: STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED")]
            STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED = 93,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED for value: STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED")]
            STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED = 94,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING for value: STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING")]
            STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING = 95,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING for value: STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING")]
            STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING = 96,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID for value: STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID")]
            STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID = 97,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING for value: STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING")]
            STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING = 98,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST for value: STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST")]
            STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST = 99,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID for value: STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID")]
            STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID = 100,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID for value: STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID")]
            STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID = 101,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID for value: STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID")]
            STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID = 102,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING for value: STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING")]
            STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING = 103,

            /// <summary>
            /// Enum STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID for value: STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID")]
            STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID = 104,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS for value: TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS")]
            TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS = 105,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING for value: TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING")]
            TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING = 106,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID for value: TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID")]
            TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID = 107,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED for value: TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED")]
            TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED = 108,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED for value: TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED")]
            TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED = 109,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET for value: TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET")]
            TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET = 110,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING for value: TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING")]
            TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING = 111,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID for value: TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID")]
            TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID = 112,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING for value: TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING")]
            TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING = 113,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST for value: TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST")]
            TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST = 114,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID for value: TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID")]
            TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID = 115,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID for value: TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID")]
            TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID = 116,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID for value: TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID")]
            TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID = 117,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED for value: TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED")]
            TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED = 118,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING for value: TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING")]
            TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING = 119,

            /// <summary>
            /// Enum TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID for value: TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID")]
            TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID = 120,

            /// <summary>
            /// Enum CLOSE_TRADE_TYPE_MISSING for value: CLOSE_TRADE_TYPE_MISSING
            /// </summary>
            [EnumMember(Value = "CLOSE_TRADE_TYPE_MISSING")]
            CLOSE_TRADE_TYPE_MISSING = 121,

            /// <summary>
            /// Enum CLOSE_TRADE_PARTIAL_UNITS_MISSING for value: CLOSE_TRADE_PARTIAL_UNITS_MISSING
            /// </summary>
            [EnumMember(Value = "CLOSE_TRADE_PARTIAL_UNITS_MISSING")]
            CLOSE_TRADE_PARTIAL_UNITS_MISSING = 122,

            /// <summary>
            /// Enum CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE for value: CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE
            /// </summary>
            [EnumMember(Value = "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE")]
            CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE = 123,

            /// <summary>
            /// Enum CLOSEOUT_POSITION_DOESNT_EXIST for value: CLOSEOUT_POSITION_DOESNT_EXIST
            /// </summary>
            [EnumMember(Value = "CLOSEOUT_POSITION_DOESNT_EXIST")]
            CLOSEOUT_POSITION_DOESNT_EXIST = 124,

            /// <summary>
            /// Enum CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION for value: CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION
            /// </summary>
            [EnumMember(Value = "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION")]
            CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION = 125,

            /// <summary>
            /// Enum CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE for value: CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE
            /// </summary>
            [EnumMember(Value = "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE")]
            CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE = 126,

            /// <summary>
            /// Enum CLOSEOUT_POSITION_REJECT for value: CLOSEOUT_POSITION_REJECT
            /// </summary>
            [EnumMember(Value = "CLOSEOUT_POSITION_REJECT")]
            CLOSEOUT_POSITION_REJECT = 127,

            /// <summary>
            /// Enum CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING for value: CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING
            /// </summary>
            [EnumMember(Value = "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING")]
            CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING = 128,

            /// <summary>
            /// Enum MARKUP_GROUP_ID_INVALID for value: MARKUP_GROUP_ID_INVALID
            /// </summary>
            [EnumMember(Value = "MARKUP_GROUP_ID_INVALID")]
            MARKUP_GROUP_ID_INVALID = 129,

            /// <summary>
            /// Enum POSITION_AGGREGATION_MODE_INVALID for value: POSITION_AGGREGATION_MODE_INVALID
            /// </summary>
            [EnumMember(Value = "POSITION_AGGREGATION_MODE_INVALID")]
            POSITION_AGGREGATION_MODE_INVALID = 130,

            /// <summary>
            /// Enum ADMIN_CONFIGURE_DATA_MISSING for value: ADMIN_CONFIGURE_DATA_MISSING
            /// </summary>
            [EnumMember(Value = "ADMIN_CONFIGURE_DATA_MISSING")]
            ADMIN_CONFIGURE_DATA_MISSING = 131,

            /// <summary>
            /// Enum MARGIN_RATE_INVALID for value: MARGIN_RATE_INVALID
            /// </summary>
            [EnumMember(Value = "MARGIN_RATE_INVALID")]
            MARGIN_RATE_INVALID = 132,

            /// <summary>
            /// Enum MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT for value: MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT
            /// </summary>
            [EnumMember(Value = "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT")]
            MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT = 133,

            /// <summary>
            /// Enum ALIAS_INVALID for value: ALIAS_INVALID
            /// </summary>
            [EnumMember(Value = "ALIAS_INVALID")]
            ALIAS_INVALID = 134,

            /// <summary>
            /// Enum CLIENT_CONFIGURE_DATA_MISSING for value: CLIENT_CONFIGURE_DATA_MISSING
            /// </summary>
            [EnumMember(Value = "CLIENT_CONFIGURE_DATA_MISSING")]
            CLIENT_CONFIGURE_DATA_MISSING = 135,

            /// <summary>
            /// Enum MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL for value: MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL
            /// </summary>
            [EnumMember(Value = "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL")]
            MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL = 136,

            /// <summary>
            /// Enum AMOUNT_INVALID for value: AMOUNT_INVALID
            /// </summary>
            [EnumMember(Value = "AMOUNT_INVALID")]
            AMOUNT_INVALID = 137,

            /// <summary>
            /// Enum INSUFFICIENT_FUNDS for value: INSUFFICIENT_FUNDS
            /// </summary>
            [EnumMember(Value = "INSUFFICIENT_FUNDS")]
            INSUFFICIENT_FUNDS = 138,

            /// <summary>
            /// Enum AMOUNT_MISSING for value: AMOUNT_MISSING
            /// </summary>
            [EnumMember(Value = "AMOUNT_MISSING")]
            AMOUNT_MISSING = 139,

            /// <summary>
            /// Enum FUNDING_REASON_MISSING for value: FUNDING_REASON_MISSING
            /// </summary>
            [EnumMember(Value = "FUNDING_REASON_MISSING")]
            FUNDING_REASON_MISSING = 140,

            /// <summary>
            /// Enum CLIENT_EXTENSIONS_DATA_MISSING for value: CLIENT_EXTENSIONS_DATA_MISSING
            /// </summary>
            [EnumMember(Value = "CLIENT_EXTENSIONS_DATA_MISSING")]
            CLIENT_EXTENSIONS_DATA_MISSING = 141,

            /// <summary>
            /// Enum REPLACING_ORDER_INVALID for value: REPLACING_ORDER_INVALID
            /// </summary>
            [EnumMember(Value = "REPLACING_ORDER_INVALID")]
            REPLACING_ORDER_INVALID = 142,

            /// <summary>
            /// Enum REPLACING_TRADE_ID_INVALID for value: REPLACING_TRADE_ID_INVALID
            /// </summary>
            [EnumMember(Value = "REPLACING_TRADE_ID_INVALID")]
            REPLACING_TRADE_ID_INVALID = 143

        }

        /// <summary>
        /// The reason that the Reject Transaction was created
        /// </summary>
        /// <value>The reason that the Reject Transaction was created</value>
        [DataMember(Name="rejectReason", EmitDefaultValue=false)]
        public RejectReasonEnum? RejectReason { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ClientConfigureRejectTransaction" /> class.
        /// </summary>
        /// <param name="id">The Transaction&#39;s Identifier..</param>
        /// <param name="time">A date and time value using either RFC3339 or UNIX time representation. The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)..</param>
        /// <param name="userID">The ID of the user that initiated the creation of the Transaction..</param>
        /// <param name="accountID">The Account&#39;s identifier.</param>
        /// <param name="batchID">The ID of the \&quot;batch\&quot; that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously..</param>
        /// <param name="requestID">The Request ID of the request which generated the transaction..</param>
        /// <param name="type">type.</param>
        /// <param name="rejectReason">The reason that the Reject Transaction was created.</param>
        /// <param name="alias">The client-provided alias for the Account..</param>
        /// <param name="marginRate">The margin rate override for the Account..</param>
        public ClientConfigureRejectTransaction(int id = default(int), string time = default(string), int userID = default(int), string accountID = default(string), int batchID = default(int), string requestID = default(string), TransactionType? type = default(TransactionType?), RejectReasonEnum? rejectReason = default(RejectReasonEnum?), string alias = default(string), double marginRate = default(double))
        {
            this.Id = id;
            this.Time = time;
            this.UserID = userID;
            this.AccountID = accountID;
            this.BatchID = batchID;
            this.RequestID = requestID;
            this.Type = type;
            this.RejectReason = rejectReason;
            this.Alias = alias;
            this.MarginRate = marginRate;
        }
        
        /// <summary>
        /// The Transaction&#39;s Identifier.
        /// </summary>
        /// <value>The Transaction&#39;s Identifier.</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int Id { get; set; }

        /// <summary>
        /// A date and time value using either RFC3339 or UNIX time representation. The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places).
        /// </summary>
        /// <value>A date and time value using either RFC3339 or UNIX time representation. The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places).</value>
        [DataMember(Name="time", EmitDefaultValue=false)]
        public string Time { get; set; }

        /// <summary>
        /// The ID of the user that initiated the creation of the Transaction.
        /// </summary>
        /// <value>The ID of the user that initiated the creation of the Transaction.</value>
        [DataMember(Name="userID", EmitDefaultValue=false)]
        public int UserID { get; set; }

        /// <summary>
        /// The Account&#39;s identifier
        /// </summary>
        /// <value>The Account&#39;s identifier</value>
        [DataMember(Name="accountID", EmitDefaultValue=false)]
        public string AccountID { get; set; }

        /// <summary>
        /// The ID of the \&quot;batch\&quot; that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.
        /// </summary>
        /// <value>The ID of the \&quot;batch\&quot; that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.</value>
        [DataMember(Name="batchID", EmitDefaultValue=false)]
        public int BatchID { get; set; }

        /// <summary>
        /// The Request ID of the request which generated the transaction.
        /// </summary>
        /// <value>The Request ID of the request which generated the transaction.</value>
        [DataMember(Name="requestID", EmitDefaultValue=false)]
        public string RequestID { get; set; }

        /// <summary>
        /// The client-provided alias for the Account.
        /// </summary>
        /// <value>The client-provided alias for the Account.</value>
        [DataMember(Name="alias", EmitDefaultValue=false)]
        public string Alias { get; set; }

        /// <summary>
        /// The margin rate override for the Account.
        /// </summary>
        /// <value>The margin rate override for the Account.</value>
        [DataMember(Name="marginRate", EmitDefaultValue=false)]
        public double MarginRate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ClientConfigureRejectTransaction {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Time: ").Append(Time).Append("\n");
            sb.Append("  UserID: ").Append(UserID).Append("\n");
            sb.Append("  AccountID: ").Append(AccountID).Append("\n");
            sb.Append("  BatchID: ").Append(BatchID).Append("\n");
            sb.Append("  RequestID: ").Append(RequestID).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  RejectReason: ").Append(RejectReason).Append("\n");
            sb.Append("  Alias: ").Append(Alias).Append("\n");
            sb.Append("  MarginRate: ").Append(MarginRate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ClientConfigureRejectTransaction);
        }

        /// <summary>
        /// Returns true if ClientConfigureRejectTransaction instances are equal
        /// </summary>
        /// <param name="input">Instance of ClientConfigureRejectTransaction to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ClientConfigureRejectTransaction input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                ) && 
                (
                    this.Time == input.Time ||
                    (this.Time != null &&
                    this.Time.Equals(input.Time))
                ) && 
                (
                    this.UserID == input.UserID ||
                    this.UserID.Equals(input.UserID)
                ) && 
                (
                    this.AccountID == input.AccountID ||
                    (this.AccountID != null &&
                    this.AccountID.Equals(input.AccountID))
                ) && 
                (
                    this.BatchID == input.BatchID ||
                    this.BatchID.Equals(input.BatchID)
                ) && 
                (
                    this.RequestID == input.RequestID ||
                    (this.RequestID != null &&
                    this.RequestID.Equals(input.RequestID))
                ) && 
                (
                    this.Type == input.Type ||
                    this.Type.Equals(input.Type)
                ) && 
                (
                    this.RejectReason == input.RejectReason ||
                    this.RejectReason.Equals(input.RejectReason)
                ) && 
                (
                    this.Alias == input.Alias ||
                    (this.Alias != null &&
                    this.Alias.Equals(input.Alias))
                ) && 
                (
                    this.MarginRate == input.MarginRate ||
                    this.MarginRate.Equals(input.MarginRate)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Time != null)
                    hashCode = hashCode * 59 + this.Time.GetHashCode();
                hashCode = hashCode * 59 + this.UserID.GetHashCode();
                if (this.AccountID != null)
                    hashCode = hashCode * 59 + this.AccountID.GetHashCode();
                hashCode = hashCode * 59 + this.BatchID.GetHashCode();
                if (this.RequestID != null)
                    hashCode = hashCode * 59 + this.RequestID.GetHashCode();
                hashCode = hashCode * 59 + this.Type.GetHashCode();
                hashCode = hashCode * 59 + this.RejectReason.GetHashCode();
                if (this.Alias != null)
                    hashCode = hashCode * 59 + this.Alias.GetHashCode();
                hashCode = hashCode * 59 + this.MarginRate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Time (string) pattern
            Regex regexTime = new Regex(@"^(?:(?:\\d+(?:\\.\\d{1,9})?)|(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z|[+-][01]\\d:[0-5]\\d))$", RegexOptions.CultureInvariant);
            if (false == regexTime.Match(this.Time).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Time, must match a pattern of " + regexTime, new [] { "Time" });
            }

            // AccountID (string) pattern
            Regex regexAccountID = new Regex(@"^\\d+-\\d+-\\d+-\\d+$", RegexOptions.CultureInvariant);
            if (false == regexAccountID.Match(this.AccountID).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for AccountID, must match a pattern of " + regexAccountID, new [] { "AccountID" });
            }

            yield break;
        }
    }

}
