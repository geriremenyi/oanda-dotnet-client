/* 
 * OANDA v20 API
 *
 * The full OANDA v20 API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using GeriRemenyi.Oanda.V20.Client.Api;
using GeriRemenyi.Oanda.V20.Client.Model;
using GeriRemenyi.Oanda.V20.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace GeriRemenyi.Oanda.V20.Client.Test
{
    /// <summary>
    ///  Class for testing ClosePositionResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ClosePositionResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ClosePositionResponse
        //private ClosePositionResponse instance;

        public ClosePositionResponseTests()
        {
            // TODO uncomment below to create an instance of ClosePositionResponse
            //instance = new ClosePositionResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ClosePositionResponse
        /// </summary>
        [Fact]
        public void ClosePositionResponseInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ClosePositionResponse
            //Assert.IsInstanceOfType<ClosePositionResponse> (instance, "variable 'instance' is a ClosePositionResponse");
        }


        /// <summary>
        /// Test the property 'LongOrderCreateTransaction'
        /// </summary>
        [Fact]
        public void LongOrderCreateTransactionTest()
        {
            // TODO unit test for the property 'LongOrderCreateTransaction'
        }
        /// <summary>
        /// Test the property 'LongOrderFillTransaction'
        /// </summary>
        [Fact]
        public void LongOrderFillTransactionTest()
        {
            // TODO unit test for the property 'LongOrderFillTransaction'
        }
        /// <summary>
        /// Test the property 'LongOrderCancelTransaction'
        /// </summary>
        [Fact]
        public void LongOrderCancelTransactionTest()
        {
            // TODO unit test for the property 'LongOrderCancelTransaction'
        }
        /// <summary>
        /// Test the property 'ShortOrderCreateTransaction'
        /// </summary>
        [Fact]
        public void ShortOrderCreateTransactionTest()
        {
            // TODO unit test for the property 'ShortOrderCreateTransaction'
        }
        /// <summary>
        /// Test the property 'ShortOrderFillTransaction'
        /// </summary>
        [Fact]
        public void ShortOrderFillTransactionTest()
        {
            // TODO unit test for the property 'ShortOrderFillTransaction'
        }
        /// <summary>
        /// Test the property 'ShortOrderCancelTransaction'
        /// </summary>
        [Fact]
        public void ShortOrderCancelTransactionTest()
        {
            // TODO unit test for the property 'ShortOrderCancelTransaction'
        }
        /// <summary>
        /// Test the property 'LastTransactionID'
        /// </summary>
        [Fact]
        public void LastTransactionIDTest()
        {
            // TODO unit test for the property 'LastTransactionID'
        }
        /// <summary>
        /// Test the property 'RelatedTransactionIDs'
        /// </summary>
        [Fact]
        public void RelatedTransactionIDsTest()
        {
            // TODO unit test for the property 'RelatedTransactionIDs'
        }

    }

}
