/* 
 * OANDA v20 API
 *
 * The full OANDA v20 API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using GeriRemenyi.Oanda.V20.Client.Api;
using GeriRemenyi.Oanda.V20.Client.Model;
using GeriRemenyi.Oanda.V20.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace GeriRemenyi.Oanda.V20.Client.Test
{
    /// <summary>
    ///  Class for testing DependentTradeOrdersBadRequestResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DependentTradeOrdersBadRequestResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DependentTradeOrdersBadRequestResponse
        //private DependentTradeOrdersBadRequestResponse instance;

        public DependentTradeOrdersBadRequestResponseTests()
        {
            // TODO uncomment below to create an instance of DependentTradeOrdersBadRequestResponse
            //instance = new DependentTradeOrdersBadRequestResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DependentTradeOrdersBadRequestResponse
        /// </summary>
        [Fact]
        public void DependentTradeOrdersBadRequestResponseInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" DependentTradeOrdersBadRequestResponse
            //Assert.IsInstanceOfType<DependentTradeOrdersBadRequestResponse> (instance, "variable 'instance' is a DependentTradeOrdersBadRequestResponse");
        }


        /// <summary>
        /// Test the property 'TakeProfitOrderCancelRejectTransaction'
        /// </summary>
        [Fact]
        public void TakeProfitOrderCancelRejectTransactionTest()
        {
            // TODO unit test for the property 'TakeProfitOrderCancelRejectTransaction'
        }
        /// <summary>
        /// Test the property 'TakeProfitOrderRejectTransaction'
        /// </summary>
        [Fact]
        public void TakeProfitOrderRejectTransactionTest()
        {
            // TODO unit test for the property 'TakeProfitOrderRejectTransaction'
        }
        /// <summary>
        /// Test the property 'StopLossOrderCancelRejectTransaction'
        /// </summary>
        [Fact]
        public void StopLossOrderCancelRejectTransactionTest()
        {
            // TODO unit test for the property 'StopLossOrderCancelRejectTransaction'
        }
        /// <summary>
        /// Test the property 'StopLossOrderRejectTransaction'
        /// </summary>
        [Fact]
        public void StopLossOrderRejectTransactionTest()
        {
            // TODO unit test for the property 'StopLossOrderRejectTransaction'
        }
        /// <summary>
        /// Test the property 'TrailingStopLossOrderCancelRejectTransaction'
        /// </summary>
        [Fact]
        public void TrailingStopLossOrderCancelRejectTransactionTest()
        {
            // TODO unit test for the property 'TrailingStopLossOrderCancelRejectTransaction'
        }
        /// <summary>
        /// Test the property 'TrailingStopLossOrderRejectTransaction'
        /// </summary>
        [Fact]
        public void TrailingStopLossOrderRejectTransactionTest()
        {
            // TODO unit test for the property 'TrailingStopLossOrderRejectTransaction'
        }
        /// <summary>
        /// Test the property 'ErrorCode'
        /// </summary>
        [Fact]
        public void ErrorCodeTest()
        {
            // TODO unit test for the property 'ErrorCode'
        }
        /// <summary>
        /// Test the property 'ErrorMessage'
        /// </summary>
        [Fact]
        public void ErrorMessageTest()
        {
            // TODO unit test for the property 'ErrorMessage'
        }
        /// <summary>
        /// Test the property 'LastTransactionID'
        /// </summary>
        [Fact]
        public void LastTransactionIDTest()
        {
            // TODO unit test for the property 'LastTransactionID'
        }
        /// <summary>
        /// Test the property 'RelatedTransactionIDs'
        /// </summary>
        [Fact]
        public void RelatedTransactionIDsTest()
        {
            // TODO unit test for the property 'RelatedTransactionIDs'
        }

    }

}
