/* 
 * OANDA v20 API
 *
 * The full OANDA v20 API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = GeriRemenyi.Oanda.V20.Client.OpenAPIDateConverter;

namespace GeriRemenyi.Oanda.V20.Model
{
    /// <summary>
    /// InlineResponse20018
    /// </summary>
    [DataContract]
    public partial class InlineResponse20018 :  IEquatable<InlineResponse20018>, IValidatableObject
    {
        /// <summary>
        /// The Type of the Transaction.
        /// </summary>
        /// <value>The Type of the Transaction.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum CREATE for value: CREATE
            /// </summary>
            [EnumMember(Value = "CREATE")]
            CREATE = 1,

            /// <summary>
            /// Enum CLOSE for value: CLOSE
            /// </summary>
            [EnumMember(Value = "CLOSE")]
            CLOSE = 2,

            /// <summary>
            /// Enum REOPEN for value: REOPEN
            /// </summary>
            [EnumMember(Value = "REOPEN")]
            REOPEN = 3,

            /// <summary>
            /// Enum CLIENTCONFIGURE for value: CLIENT_CONFIGURE
            /// </summary>
            [EnumMember(Value = "CLIENT_CONFIGURE")]
            CLIENTCONFIGURE = 4,

            /// <summary>
            /// Enum CLIENTCONFIGUREREJECT for value: CLIENT_CONFIGURE_REJECT
            /// </summary>
            [EnumMember(Value = "CLIENT_CONFIGURE_REJECT")]
            CLIENTCONFIGUREREJECT = 5,

            /// <summary>
            /// Enum TRANSFERFUNDS for value: TRANSFER_FUNDS
            /// </summary>
            [EnumMember(Value = "TRANSFER_FUNDS")]
            TRANSFERFUNDS = 6,

            /// <summary>
            /// Enum TRANSFERFUNDSREJECT for value: TRANSFER_FUNDS_REJECT
            /// </summary>
            [EnumMember(Value = "TRANSFER_FUNDS_REJECT")]
            TRANSFERFUNDSREJECT = 7,

            /// <summary>
            /// Enum MARKETORDER for value: MARKET_ORDER
            /// </summary>
            [EnumMember(Value = "MARKET_ORDER")]
            MARKETORDER = 8,

            /// <summary>
            /// Enum MARKETORDERREJECT for value: MARKET_ORDER_REJECT
            /// </summary>
            [EnumMember(Value = "MARKET_ORDER_REJECT")]
            MARKETORDERREJECT = 9,

            /// <summary>
            /// Enum FIXEDPRICEORDER for value: FIXED_PRICE_ORDER
            /// </summary>
            [EnumMember(Value = "FIXED_PRICE_ORDER")]
            FIXEDPRICEORDER = 10,

            /// <summary>
            /// Enum LIMITORDER for value: LIMIT_ORDER
            /// </summary>
            [EnumMember(Value = "LIMIT_ORDER")]
            LIMITORDER = 11,

            /// <summary>
            /// Enum LIMITORDERREJECT for value: LIMIT_ORDER_REJECT
            /// </summary>
            [EnumMember(Value = "LIMIT_ORDER_REJECT")]
            LIMITORDERREJECT = 12,

            /// <summary>
            /// Enum STOPORDER for value: STOP_ORDER
            /// </summary>
            [EnumMember(Value = "STOP_ORDER")]
            STOPORDER = 13,

            /// <summary>
            /// Enum STOPORDERREJECT for value: STOP_ORDER_REJECT
            /// </summary>
            [EnumMember(Value = "STOP_ORDER_REJECT")]
            STOPORDERREJECT = 14,

            /// <summary>
            /// Enum MARKETIFTOUCHEDORDER for value: MARKET_IF_TOUCHED_ORDER
            /// </summary>
            [EnumMember(Value = "MARKET_IF_TOUCHED_ORDER")]
            MARKETIFTOUCHEDORDER = 15,

            /// <summary>
            /// Enum MARKETIFTOUCHEDORDERREJECT for value: MARKET_IF_TOUCHED_ORDER_REJECT
            /// </summary>
            [EnumMember(Value = "MARKET_IF_TOUCHED_ORDER_REJECT")]
            MARKETIFTOUCHEDORDERREJECT = 16,

            /// <summary>
            /// Enum TAKEPROFITORDER for value: TAKE_PROFIT_ORDER
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ORDER")]
            TAKEPROFITORDER = 17,

            /// <summary>
            /// Enum TAKEPROFITORDERREJECT for value: TAKE_PROFIT_ORDER_REJECT
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ORDER_REJECT")]
            TAKEPROFITORDERREJECT = 18,

            /// <summary>
            /// Enum STOPLOSSORDER for value: STOP_LOSS_ORDER
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER")]
            STOPLOSSORDER = 19,

            /// <summary>
            /// Enum STOPLOSSORDERREJECT for value: STOP_LOSS_ORDER_REJECT
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_REJECT")]
            STOPLOSSORDERREJECT = 20,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSORDER for value: TRAILING_STOP_LOSS_ORDER
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ORDER")]
            TRAILINGSTOPLOSSORDER = 21,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSORDERREJECT for value: TRAILING_STOP_LOSS_ORDER_REJECT
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ORDER_REJECT")]
            TRAILINGSTOPLOSSORDERREJECT = 22,

            /// <summary>
            /// Enum ORDERFILL for value: ORDER_FILL
            /// </summary>
            [EnumMember(Value = "ORDER_FILL")]
            ORDERFILL = 23,

            /// <summary>
            /// Enum ORDERCANCEL for value: ORDER_CANCEL
            /// </summary>
            [EnumMember(Value = "ORDER_CANCEL")]
            ORDERCANCEL = 24,

            /// <summary>
            /// Enum ORDERCANCELREJECT for value: ORDER_CANCEL_REJECT
            /// </summary>
            [EnumMember(Value = "ORDER_CANCEL_REJECT")]
            ORDERCANCELREJECT = 25,

            /// <summary>
            /// Enum ORDERCLIENTEXTENSIONSMODIFY for value: ORDER_CLIENT_EXTENSIONS_MODIFY
            /// </summary>
            [EnumMember(Value = "ORDER_CLIENT_EXTENSIONS_MODIFY")]
            ORDERCLIENTEXTENSIONSMODIFY = 26,

            /// <summary>
            /// Enum ORDERCLIENTEXTENSIONSMODIFYREJECT for value: ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT
            /// </summary>
            [EnumMember(Value = "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT")]
            ORDERCLIENTEXTENSIONSMODIFYREJECT = 27,

            /// <summary>
            /// Enum TRADECLIENTEXTENSIONSMODIFY for value: TRADE_CLIENT_EXTENSIONS_MODIFY
            /// </summary>
            [EnumMember(Value = "TRADE_CLIENT_EXTENSIONS_MODIFY")]
            TRADECLIENTEXTENSIONSMODIFY = 28,

            /// <summary>
            /// Enum TRADECLIENTEXTENSIONSMODIFYREJECT for value: TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT
            /// </summary>
            [EnumMember(Value = "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT")]
            TRADECLIENTEXTENSIONSMODIFYREJECT = 29,

            /// <summary>
            /// Enum MARGINCALLENTER for value: MARGIN_CALL_ENTER
            /// </summary>
            [EnumMember(Value = "MARGIN_CALL_ENTER")]
            MARGINCALLENTER = 30,

            /// <summary>
            /// Enum MARGINCALLEXTEND for value: MARGIN_CALL_EXTEND
            /// </summary>
            [EnumMember(Value = "MARGIN_CALL_EXTEND")]
            MARGINCALLEXTEND = 31,

            /// <summary>
            /// Enum MARGINCALLEXIT for value: MARGIN_CALL_EXIT
            /// </summary>
            [EnumMember(Value = "MARGIN_CALL_EXIT")]
            MARGINCALLEXIT = 32,

            /// <summary>
            /// Enum DELAYEDTRADECLOSURE for value: DELAYED_TRADE_CLOSURE
            /// </summary>
            [EnumMember(Value = "DELAYED_TRADE_CLOSURE")]
            DELAYEDTRADECLOSURE = 33,

            /// <summary>
            /// Enum DAILYFINANCING for value: DAILY_FINANCING
            /// </summary>
            [EnumMember(Value = "DAILY_FINANCING")]
            DAILYFINANCING = 34,

            /// <summary>
            /// Enum RESETRESETTABLEPL for value: RESET_RESETTABLE_PL
            /// </summary>
            [EnumMember(Value = "RESET_RESETTABLE_PL")]
            RESETRESETTABLEPL = 35

        }


        /// <summary>
        /// The Transaction-type filter provided in the request
        /// </summary>
        /// <value>The Transaction-type filter provided in the request</value>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public List<TypeEnum> Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20018" /> class.
        /// </summary>
        /// <param name="from">A date and time value using either RFC3339 or UNIX time representation. The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)..</param>
        /// <param name="to">A date and time value using either RFC3339 or UNIX time representation. The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)..</param>
        /// <param name="pageSize">The pageSize provided in the request.</param>
        /// <param name="type">The Transaction-type filter provided in the request.</param>
        /// <param name="count">The number of Transactions that are contained in the pages returned.</param>
        /// <param name="pages">The list of URLs that represent idrange queries providing the data for each page in the query results.</param>
        /// <param name="lastTransactionID">The ID of the most recent Transaction created for the Account.</param>
        public InlineResponse20018(string from = default(string), string to = default(string), int pageSize = default(int), List<TypeEnum> type = default(List<TypeEnum>), int count = default(int), List<string> pages = default(List<string>), int lastTransactionID = default(int))
        {
            this.From = from;
            this.To = to;
            this.PageSize = pageSize;
            this.Type = type;
            this.Count = count;
            this.Pages = pages;
            this.LastTransactionID = lastTransactionID;
        }
        
        /// <summary>
        /// A date and time value using either RFC3339 or UNIX time representation. The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places).
        /// </summary>
        /// <value>A date and time value using either RFC3339 or UNIX time representation. The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places).</value>
        [DataMember(Name="from", EmitDefaultValue=false)]
        public string From { get; set; }

        /// <summary>
        /// A date and time value using either RFC3339 or UNIX time representation. The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places).
        /// </summary>
        /// <value>A date and time value using either RFC3339 or UNIX time representation. The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places).</value>
        [DataMember(Name="to", EmitDefaultValue=false)]
        public string To { get; set; }

        /// <summary>
        /// The pageSize provided in the request
        /// </summary>
        /// <value>The pageSize provided in the request</value>
        [DataMember(Name="pageSize", EmitDefaultValue=false)]
        public int PageSize { get; set; }

        /// <summary>
        /// The number of Transactions that are contained in the pages returned
        /// </summary>
        /// <value>The number of Transactions that are contained in the pages returned</value>
        [DataMember(Name="count", EmitDefaultValue=false)]
        public int Count { get; set; }

        /// <summary>
        /// The list of URLs that represent idrange queries providing the data for each page in the query results
        /// </summary>
        /// <value>The list of URLs that represent idrange queries providing the data for each page in the query results</value>
        [DataMember(Name="pages", EmitDefaultValue=false)]
        public List<string> Pages { get; set; }

        /// <summary>
        /// The ID of the most recent Transaction created for the Account
        /// </summary>
        /// <value>The ID of the most recent Transaction created for the Account</value>
        [DataMember(Name="lastTransactionID", EmitDefaultValue=false)]
        public int LastTransactionID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse20018 {\n");
            sb.Append("  From: ").Append(From).Append("\n");
            sb.Append("  To: ").Append(To).Append("\n");
            sb.Append("  PageSize: ").Append(PageSize).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Count: ").Append(Count).Append("\n");
            sb.Append("  Pages: ").Append(Pages).Append("\n");
            sb.Append("  LastTransactionID: ").Append(LastTransactionID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse20018);
        }

        /// <summary>
        /// Returns true if InlineResponse20018 instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse20018 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse20018 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.From == input.From ||
                    (this.From != null &&
                    this.From.Equals(input.From))
                ) && 
                (
                    this.To == input.To ||
                    (this.To != null &&
                    this.To.Equals(input.To))
                ) && 
                (
                    this.PageSize == input.PageSize ||
                    this.PageSize.Equals(input.PageSize)
                ) && 
                (
                    this.Type == input.Type ||
                    this.Type.SequenceEqual(input.Type)
                ) && 
                (
                    this.Count == input.Count ||
                    this.Count.Equals(input.Count)
                ) && 
                (
                    this.Pages == input.Pages ||
                    this.Pages != null &&
                    input.Pages != null &&
                    this.Pages.SequenceEqual(input.Pages)
                ) && 
                (
                    this.LastTransactionID == input.LastTransactionID ||
                    this.LastTransactionID.Equals(input.LastTransactionID)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.From != null)
                    hashCode = hashCode * 59 + this.From.GetHashCode();
                if (this.To != null)
                    hashCode = hashCode * 59 + this.To.GetHashCode();
                hashCode = hashCode * 59 + this.PageSize.GetHashCode();
                hashCode = hashCode * 59 + this.Type.GetHashCode();
                hashCode = hashCode * 59 + this.Count.GetHashCode();
                if (this.Pages != null)
                    hashCode = hashCode * 59 + this.Pages.GetHashCode();
                hashCode = hashCode * 59 + this.LastTransactionID.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // From (string) pattern
            Regex regexFrom = new Regex(@"^(?:(?:\\d+(?:\\.\\d{1,9})?)|(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z|[+-][01]\\d:[0-5]\\d))$", RegexOptions.CultureInvariant);
            if (false == regexFrom.Match(this.From).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for From, must match a pattern of " + regexFrom, new [] { "From" });
            }

            // To (string) pattern
            Regex regexTo = new Regex(@"^(?:(?:\\d+(?:\\.\\d{1,9})?)|(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z|[+-][01]\\d:[0-5]\\d))$", RegexOptions.CultureInvariant);
            if (false == regexTo.Match(this.To).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for To, must match a pattern of " + regexTo, new [] { "To" });
            }

            yield break;
        }
    }

}
