/* 
 * OANDA v20 API
 *
 * The full OANDA v20 API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = GeriRemenyi.Oanda.V20.Client.OpenAPIDateConverter;

namespace GeriRemenyi.Oanda.V20.Model
{
    /// <summary>
    /// A OrderClientExtensionsModifyRejectTransaction represents the rejection of the modification of an Order&#39;s Client Extensions.
    /// </summary>
    [DataContract]
    public partial class OrderClientExtensionsModifyRejectTransaction : OrderClientExtensionsModifyRejectTransactionAllOf,  IEquatable<OrderClientExtensionsModifyRejectTransaction>, IValidatableObject
    {
        /// <summary>
        /// The Type of the Transaction.
        /// </summary>
        /// <value>The Type of the Transaction.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum CREATE for value: CREATE
            /// </summary>
            [EnumMember(Value = "CREATE")]
            CREATE = 1,

            /// <summary>
            /// Enum CLOSE for value: CLOSE
            /// </summary>
            [EnumMember(Value = "CLOSE")]
            CLOSE = 2,

            /// <summary>
            /// Enum REOPEN for value: REOPEN
            /// </summary>
            [EnumMember(Value = "REOPEN")]
            REOPEN = 3,

            /// <summary>
            /// Enum CLIENTCONFIGURE for value: CLIENT_CONFIGURE
            /// </summary>
            [EnumMember(Value = "CLIENT_CONFIGURE")]
            CLIENTCONFIGURE = 4,

            /// <summary>
            /// Enum CLIENTCONFIGUREREJECT for value: CLIENT_CONFIGURE_REJECT
            /// </summary>
            [EnumMember(Value = "CLIENT_CONFIGURE_REJECT")]
            CLIENTCONFIGUREREJECT = 5,

            /// <summary>
            /// Enum TRANSFERFUNDS for value: TRANSFER_FUNDS
            /// </summary>
            [EnumMember(Value = "TRANSFER_FUNDS")]
            TRANSFERFUNDS = 6,

            /// <summary>
            /// Enum TRANSFERFUNDSREJECT for value: TRANSFER_FUNDS_REJECT
            /// </summary>
            [EnumMember(Value = "TRANSFER_FUNDS_REJECT")]
            TRANSFERFUNDSREJECT = 7,

            /// <summary>
            /// Enum MARKETORDER for value: MARKET_ORDER
            /// </summary>
            [EnumMember(Value = "MARKET_ORDER")]
            MARKETORDER = 8,

            /// <summary>
            /// Enum MARKETORDERREJECT for value: MARKET_ORDER_REJECT
            /// </summary>
            [EnumMember(Value = "MARKET_ORDER_REJECT")]
            MARKETORDERREJECT = 9,

            /// <summary>
            /// Enum FIXEDPRICEORDER for value: FIXED_PRICE_ORDER
            /// </summary>
            [EnumMember(Value = "FIXED_PRICE_ORDER")]
            FIXEDPRICEORDER = 10,

            /// <summary>
            /// Enum LIMITORDER for value: LIMIT_ORDER
            /// </summary>
            [EnumMember(Value = "LIMIT_ORDER")]
            LIMITORDER = 11,

            /// <summary>
            /// Enum LIMITORDERREJECT for value: LIMIT_ORDER_REJECT
            /// </summary>
            [EnumMember(Value = "LIMIT_ORDER_REJECT")]
            LIMITORDERREJECT = 12,

            /// <summary>
            /// Enum STOPORDER for value: STOP_ORDER
            /// </summary>
            [EnumMember(Value = "STOP_ORDER")]
            STOPORDER = 13,

            /// <summary>
            /// Enum STOPORDERREJECT for value: STOP_ORDER_REJECT
            /// </summary>
            [EnumMember(Value = "STOP_ORDER_REJECT")]
            STOPORDERREJECT = 14,

            /// <summary>
            /// Enum MARKETIFTOUCHEDORDER for value: MARKET_IF_TOUCHED_ORDER
            /// </summary>
            [EnumMember(Value = "MARKET_IF_TOUCHED_ORDER")]
            MARKETIFTOUCHEDORDER = 15,

            /// <summary>
            /// Enum MARKETIFTOUCHEDORDERREJECT for value: MARKET_IF_TOUCHED_ORDER_REJECT
            /// </summary>
            [EnumMember(Value = "MARKET_IF_TOUCHED_ORDER_REJECT")]
            MARKETIFTOUCHEDORDERREJECT = 16,

            /// <summary>
            /// Enum TAKEPROFITORDER for value: TAKE_PROFIT_ORDER
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ORDER")]
            TAKEPROFITORDER = 17,

            /// <summary>
            /// Enum TAKEPROFITORDERREJECT for value: TAKE_PROFIT_ORDER_REJECT
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ORDER_REJECT")]
            TAKEPROFITORDERREJECT = 18,

            /// <summary>
            /// Enum STOPLOSSORDER for value: STOP_LOSS_ORDER
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER")]
            STOPLOSSORDER = 19,

            /// <summary>
            /// Enum STOPLOSSORDERREJECT for value: STOP_LOSS_ORDER_REJECT
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_REJECT")]
            STOPLOSSORDERREJECT = 20,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSORDER for value: TRAILING_STOP_LOSS_ORDER
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ORDER")]
            TRAILINGSTOPLOSSORDER = 21,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSORDERREJECT for value: TRAILING_STOP_LOSS_ORDER_REJECT
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ORDER_REJECT")]
            TRAILINGSTOPLOSSORDERREJECT = 22,

            /// <summary>
            /// Enum ORDERFILL for value: ORDER_FILL
            /// </summary>
            [EnumMember(Value = "ORDER_FILL")]
            ORDERFILL = 23,

            /// <summary>
            /// Enum ORDERCANCEL for value: ORDER_CANCEL
            /// </summary>
            [EnumMember(Value = "ORDER_CANCEL")]
            ORDERCANCEL = 24,

            /// <summary>
            /// Enum ORDERCANCELREJECT for value: ORDER_CANCEL_REJECT
            /// </summary>
            [EnumMember(Value = "ORDER_CANCEL_REJECT")]
            ORDERCANCELREJECT = 25,

            /// <summary>
            /// Enum ORDERCLIENTEXTENSIONSMODIFY for value: ORDER_CLIENT_EXTENSIONS_MODIFY
            /// </summary>
            [EnumMember(Value = "ORDER_CLIENT_EXTENSIONS_MODIFY")]
            ORDERCLIENTEXTENSIONSMODIFY = 26,

            /// <summary>
            /// Enum ORDERCLIENTEXTENSIONSMODIFYREJECT for value: ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT
            /// </summary>
            [EnumMember(Value = "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT")]
            ORDERCLIENTEXTENSIONSMODIFYREJECT = 27,

            /// <summary>
            /// Enum TRADECLIENTEXTENSIONSMODIFY for value: TRADE_CLIENT_EXTENSIONS_MODIFY
            /// </summary>
            [EnumMember(Value = "TRADE_CLIENT_EXTENSIONS_MODIFY")]
            TRADECLIENTEXTENSIONSMODIFY = 28,

            /// <summary>
            /// Enum TRADECLIENTEXTENSIONSMODIFYREJECT for value: TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT
            /// </summary>
            [EnumMember(Value = "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT")]
            TRADECLIENTEXTENSIONSMODIFYREJECT = 29,

            /// <summary>
            /// Enum MARGINCALLENTER for value: MARGIN_CALL_ENTER
            /// </summary>
            [EnumMember(Value = "MARGIN_CALL_ENTER")]
            MARGINCALLENTER = 30,

            /// <summary>
            /// Enum MARGINCALLEXTEND for value: MARGIN_CALL_EXTEND
            /// </summary>
            [EnumMember(Value = "MARGIN_CALL_EXTEND")]
            MARGINCALLEXTEND = 31,

            /// <summary>
            /// Enum MARGINCALLEXIT for value: MARGIN_CALL_EXIT
            /// </summary>
            [EnumMember(Value = "MARGIN_CALL_EXIT")]
            MARGINCALLEXIT = 32,

            /// <summary>
            /// Enum DELAYEDTRADECLOSURE for value: DELAYED_TRADE_CLOSURE
            /// </summary>
            [EnumMember(Value = "DELAYED_TRADE_CLOSURE")]
            DELAYEDTRADECLOSURE = 33,

            /// <summary>
            /// Enum DAILYFINANCING for value: DAILY_FINANCING
            /// </summary>
            [EnumMember(Value = "DAILY_FINANCING")]
            DAILYFINANCING = 34,

            /// <summary>
            /// Enum RESETRESETTABLEPL for value: RESET_RESETTABLE_PL
            /// </summary>
            [EnumMember(Value = "RESET_RESETTABLE_PL")]
            RESETRESETTABLEPL = 35

        }

        /// <summary>
        /// The Type of the Transaction.
        /// </summary>
        /// <value>The Type of the Transaction.</value>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public TypeEnum? Type { get; set; }
        /// <summary>
        /// The reason that the Reject Transaction was created
        /// </summary>
        /// <value>The reason that the Reject Transaction was created</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RejectReasonEnum
        {
            /// <summary>
            /// Enum INTERNALSERVERERROR for value: INTERNAL_SERVER_ERROR
            /// </summary>
            [EnumMember(Value = "INTERNAL_SERVER_ERROR")]
            INTERNALSERVERERROR = 1,

            /// <summary>
            /// Enum INSTRUMENTPRICEUNKNOWN for value: INSTRUMENT_PRICE_UNKNOWN
            /// </summary>
            [EnumMember(Value = "INSTRUMENT_PRICE_UNKNOWN")]
            INSTRUMENTPRICEUNKNOWN = 2,

            /// <summary>
            /// Enum ACCOUNTNOTACTIVE for value: ACCOUNT_NOT_ACTIVE
            /// </summary>
            [EnumMember(Value = "ACCOUNT_NOT_ACTIVE")]
            ACCOUNTNOTACTIVE = 3,

            /// <summary>
            /// Enum ACCOUNTLOCKED for value: ACCOUNT_LOCKED
            /// </summary>
            [EnumMember(Value = "ACCOUNT_LOCKED")]
            ACCOUNTLOCKED = 4,

            /// <summary>
            /// Enum ACCOUNTORDERCREATIONLOCKED for value: ACCOUNT_ORDER_CREATION_LOCKED
            /// </summary>
            [EnumMember(Value = "ACCOUNT_ORDER_CREATION_LOCKED")]
            ACCOUNTORDERCREATIONLOCKED = 5,

            /// <summary>
            /// Enum ACCOUNTCONFIGURATIONLOCKED for value: ACCOUNT_CONFIGURATION_LOCKED
            /// </summary>
            [EnumMember(Value = "ACCOUNT_CONFIGURATION_LOCKED")]
            ACCOUNTCONFIGURATIONLOCKED = 6,

            /// <summary>
            /// Enum ACCOUNTDEPOSITLOCKED for value: ACCOUNT_DEPOSIT_LOCKED
            /// </summary>
            [EnumMember(Value = "ACCOUNT_DEPOSIT_LOCKED")]
            ACCOUNTDEPOSITLOCKED = 7,

            /// <summary>
            /// Enum ACCOUNTWITHDRAWALLOCKED for value: ACCOUNT_WITHDRAWAL_LOCKED
            /// </summary>
            [EnumMember(Value = "ACCOUNT_WITHDRAWAL_LOCKED")]
            ACCOUNTWITHDRAWALLOCKED = 8,

            /// <summary>
            /// Enum ACCOUNTORDERCANCELLOCKED for value: ACCOUNT_ORDER_CANCEL_LOCKED
            /// </summary>
            [EnumMember(Value = "ACCOUNT_ORDER_CANCEL_LOCKED")]
            ACCOUNTORDERCANCELLOCKED = 9,

            /// <summary>
            /// Enum INSTRUMENTNOTTRADEABLE for value: INSTRUMENT_NOT_TRADEABLE
            /// </summary>
            [EnumMember(Value = "INSTRUMENT_NOT_TRADEABLE")]
            INSTRUMENTNOTTRADEABLE = 10,

            /// <summary>
            /// Enum PENDINGORDERSALLOWEDEXCEEDED for value: PENDING_ORDERS_ALLOWED_EXCEEDED
            /// </summary>
            [EnumMember(Value = "PENDING_ORDERS_ALLOWED_EXCEEDED")]
            PENDINGORDERSALLOWEDEXCEEDED = 11,

            /// <summary>
            /// Enum ORDERIDUNSPECIFIED for value: ORDER_ID_UNSPECIFIED
            /// </summary>
            [EnumMember(Value = "ORDER_ID_UNSPECIFIED")]
            ORDERIDUNSPECIFIED = 12,

            /// <summary>
            /// Enum ORDERDOESNTEXIST for value: ORDER_DOESNT_EXIST
            /// </summary>
            [EnumMember(Value = "ORDER_DOESNT_EXIST")]
            ORDERDOESNTEXIST = 13,

            /// <summary>
            /// Enum ORDERIDENTIFIERINCONSISTENCY for value: ORDER_IDENTIFIER_INCONSISTENCY
            /// </summary>
            [EnumMember(Value = "ORDER_IDENTIFIER_INCONSISTENCY")]
            ORDERIDENTIFIERINCONSISTENCY = 14,

            /// <summary>
            /// Enum TRADEIDUNSPECIFIED for value: TRADE_ID_UNSPECIFIED
            /// </summary>
            [EnumMember(Value = "TRADE_ID_UNSPECIFIED")]
            TRADEIDUNSPECIFIED = 15,

            /// <summary>
            /// Enum TRADEDOESNTEXIST for value: TRADE_DOESNT_EXIST
            /// </summary>
            [EnumMember(Value = "TRADE_DOESNT_EXIST")]
            TRADEDOESNTEXIST = 16,

            /// <summary>
            /// Enum TRADEIDENTIFIERINCONSISTENCY for value: TRADE_IDENTIFIER_INCONSISTENCY
            /// </summary>
            [EnumMember(Value = "TRADE_IDENTIFIER_INCONSISTENCY")]
            TRADEIDENTIFIERINCONSISTENCY = 17,

            /// <summary>
            /// Enum INSUFFICIENTMARGIN for value: INSUFFICIENT_MARGIN
            /// </summary>
            [EnumMember(Value = "INSUFFICIENT_MARGIN")]
            INSUFFICIENTMARGIN = 18,

            /// <summary>
            /// Enum INSTRUMENTMISSING for value: INSTRUMENT_MISSING
            /// </summary>
            [EnumMember(Value = "INSTRUMENT_MISSING")]
            INSTRUMENTMISSING = 19,

            /// <summary>
            /// Enum INSTRUMENTUNKNOWN for value: INSTRUMENT_UNKNOWN
            /// </summary>
            [EnumMember(Value = "INSTRUMENT_UNKNOWN")]
            INSTRUMENTUNKNOWN = 20,

            /// <summary>
            /// Enum UNITSMISSING for value: UNITS_MISSING
            /// </summary>
            [EnumMember(Value = "UNITS_MISSING")]
            UNITSMISSING = 21,

            /// <summary>
            /// Enum UNITSINVALID for value: UNITS_INVALID
            /// </summary>
            [EnumMember(Value = "UNITS_INVALID")]
            UNITSINVALID = 22,

            /// <summary>
            /// Enum UNITSPRECISIONEXCEEDED for value: UNITS_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "UNITS_PRECISION_EXCEEDED")]
            UNITSPRECISIONEXCEEDED = 23,

            /// <summary>
            /// Enum UNITSLIMITEXCEEDED for value: UNITS_LIMIT_EXCEEDED
            /// </summary>
            [EnumMember(Value = "UNITS_LIMIT_EXCEEDED")]
            UNITSLIMITEXCEEDED = 24,

            /// <summary>
            /// Enum UNITSMIMIMUMNOTMET for value: UNITS_MIMIMUM_NOT_MET
            /// </summary>
            [EnumMember(Value = "UNITS_MIMIMUM_NOT_MET")]
            UNITSMIMIMUMNOTMET = 25,

            /// <summary>
            /// Enum PRICEMISSING for value: PRICE_MISSING
            /// </summary>
            [EnumMember(Value = "PRICE_MISSING")]
            PRICEMISSING = 26,

            /// <summary>
            /// Enum PRICEINVALID for value: PRICE_INVALID
            /// </summary>
            [EnumMember(Value = "PRICE_INVALID")]
            PRICEINVALID = 27,

            /// <summary>
            /// Enum PRICEPRECISIONEXCEEDED for value: PRICE_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "PRICE_PRECISION_EXCEEDED")]
            PRICEPRECISIONEXCEEDED = 28,

            /// <summary>
            /// Enum PRICEDISTANCEMISSING for value: PRICE_DISTANCE_MISSING
            /// </summary>
            [EnumMember(Value = "PRICE_DISTANCE_MISSING")]
            PRICEDISTANCEMISSING = 29,

            /// <summary>
            /// Enum PRICEDISTANCEINVALID for value: PRICE_DISTANCE_INVALID
            /// </summary>
            [EnumMember(Value = "PRICE_DISTANCE_INVALID")]
            PRICEDISTANCEINVALID = 30,

            /// <summary>
            /// Enum PRICEDISTANCEPRECISIONEXCEEDED for value: PRICE_DISTANCE_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "PRICE_DISTANCE_PRECISION_EXCEEDED")]
            PRICEDISTANCEPRECISIONEXCEEDED = 31,

            /// <summary>
            /// Enum PRICEDISTANCEMAXIMUMEXCEEDED for value: PRICE_DISTANCE_MAXIMUM_EXCEEDED
            /// </summary>
            [EnumMember(Value = "PRICE_DISTANCE_MAXIMUM_EXCEEDED")]
            PRICEDISTANCEMAXIMUMEXCEEDED = 32,

            /// <summary>
            /// Enum PRICEDISTANCEMINIMUMNOTMET for value: PRICE_DISTANCE_MINIMUM_NOT_MET
            /// </summary>
            [EnumMember(Value = "PRICE_DISTANCE_MINIMUM_NOT_MET")]
            PRICEDISTANCEMINIMUMNOTMET = 33,

            /// <summary>
            /// Enum TIMEINFORCEMISSING for value: TIME_IN_FORCE_MISSING
            /// </summary>
            [EnumMember(Value = "TIME_IN_FORCE_MISSING")]
            TIMEINFORCEMISSING = 34,

            /// <summary>
            /// Enum TIMEINFORCEINVALID for value: TIME_IN_FORCE_INVALID
            /// </summary>
            [EnumMember(Value = "TIME_IN_FORCE_INVALID")]
            TIMEINFORCEINVALID = 35,

            /// <summary>
            /// Enum TIMEINFORCEGTDTIMESTAMPMISSING for value: TIME_IN_FORCE_GTD_TIMESTAMP_MISSING
            /// </summary>
            [EnumMember(Value = "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING")]
            TIMEINFORCEGTDTIMESTAMPMISSING = 36,

            /// <summary>
            /// Enum TIMEINFORCEGTDTIMESTAMPINPAST for value: TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST
            /// </summary>
            [EnumMember(Value = "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST")]
            TIMEINFORCEGTDTIMESTAMPINPAST = 37,

            /// <summary>
            /// Enum PRICEBOUNDINVALID for value: PRICE_BOUND_INVALID
            /// </summary>
            [EnumMember(Value = "PRICE_BOUND_INVALID")]
            PRICEBOUNDINVALID = 38,

            /// <summary>
            /// Enum PRICEBOUNDPRECISIONEXCEEDED for value: PRICE_BOUND_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "PRICE_BOUND_PRECISION_EXCEEDED")]
            PRICEBOUNDPRECISIONEXCEEDED = 39,

            /// <summary>
            /// Enum ORDERSONFILLDUPLICATECLIENTORDERIDS for value: ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS
            /// </summary>
            [EnumMember(Value = "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS")]
            ORDERSONFILLDUPLICATECLIENTORDERIDS = 40,

            /// <summary>
            /// Enum TRADEONFILLCLIENTEXTENSIONSNOTSUPPORTED for value: TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED
            /// </summary>
            [EnumMember(Value = "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED")]
            TRADEONFILLCLIENTEXTENSIONSNOTSUPPORTED = 41,

            /// <summary>
            /// Enum CLIENTORDERIDINVALID for value: CLIENT_ORDER_ID_INVALID
            /// </summary>
            [EnumMember(Value = "CLIENT_ORDER_ID_INVALID")]
            CLIENTORDERIDINVALID = 42,

            /// <summary>
            /// Enum CLIENTORDERIDALREADYEXISTS for value: CLIENT_ORDER_ID_ALREADY_EXISTS
            /// </summary>
            [EnumMember(Value = "CLIENT_ORDER_ID_ALREADY_EXISTS")]
            CLIENTORDERIDALREADYEXISTS = 43,

            /// <summary>
            /// Enum CLIENTORDERTAGINVALID for value: CLIENT_ORDER_TAG_INVALID
            /// </summary>
            [EnumMember(Value = "CLIENT_ORDER_TAG_INVALID")]
            CLIENTORDERTAGINVALID = 44,

            /// <summary>
            /// Enum CLIENTORDERCOMMENTINVALID for value: CLIENT_ORDER_COMMENT_INVALID
            /// </summary>
            [EnumMember(Value = "CLIENT_ORDER_COMMENT_INVALID")]
            CLIENTORDERCOMMENTINVALID = 45,

            /// <summary>
            /// Enum CLIENTTRADEIDINVALID for value: CLIENT_TRADE_ID_INVALID
            /// </summary>
            [EnumMember(Value = "CLIENT_TRADE_ID_INVALID")]
            CLIENTTRADEIDINVALID = 46,

            /// <summary>
            /// Enum CLIENTTRADEIDALREADYEXISTS for value: CLIENT_TRADE_ID_ALREADY_EXISTS
            /// </summary>
            [EnumMember(Value = "CLIENT_TRADE_ID_ALREADY_EXISTS")]
            CLIENTTRADEIDALREADYEXISTS = 47,

            /// <summary>
            /// Enum CLIENTTRADETAGINVALID for value: CLIENT_TRADE_TAG_INVALID
            /// </summary>
            [EnumMember(Value = "CLIENT_TRADE_TAG_INVALID")]
            CLIENTTRADETAGINVALID = 48,

            /// <summary>
            /// Enum CLIENTTRADECOMMENTINVALID for value: CLIENT_TRADE_COMMENT_INVALID
            /// </summary>
            [EnumMember(Value = "CLIENT_TRADE_COMMENT_INVALID")]
            CLIENTTRADECOMMENTINVALID = 49,

            /// <summary>
            /// Enum ORDERFILLPOSITIONACTIONMISSING for value: ORDER_FILL_POSITION_ACTION_MISSING
            /// </summary>
            [EnumMember(Value = "ORDER_FILL_POSITION_ACTION_MISSING")]
            ORDERFILLPOSITIONACTIONMISSING = 50,

            /// <summary>
            /// Enum ORDERFILLPOSITIONACTIONINVALID for value: ORDER_FILL_POSITION_ACTION_INVALID
            /// </summary>
            [EnumMember(Value = "ORDER_FILL_POSITION_ACTION_INVALID")]
            ORDERFILLPOSITIONACTIONINVALID = 51,

            /// <summary>
            /// Enum TRIGGERCONDITIONMISSING for value: TRIGGER_CONDITION_MISSING
            /// </summary>
            [EnumMember(Value = "TRIGGER_CONDITION_MISSING")]
            TRIGGERCONDITIONMISSING = 52,

            /// <summary>
            /// Enum TRIGGERCONDITIONINVALID for value: TRIGGER_CONDITION_INVALID
            /// </summary>
            [EnumMember(Value = "TRIGGER_CONDITION_INVALID")]
            TRIGGERCONDITIONINVALID = 53,

            /// <summary>
            /// Enum ORDERPARTIALFILLOPTIONMISSING for value: ORDER_PARTIAL_FILL_OPTION_MISSING
            /// </summary>
            [EnumMember(Value = "ORDER_PARTIAL_FILL_OPTION_MISSING")]
            ORDERPARTIALFILLOPTIONMISSING = 54,

            /// <summary>
            /// Enum ORDERPARTIALFILLOPTIONINVALID for value: ORDER_PARTIAL_FILL_OPTION_INVALID
            /// </summary>
            [EnumMember(Value = "ORDER_PARTIAL_FILL_OPTION_INVALID")]
            ORDERPARTIALFILLOPTIONINVALID = 55,

            /// <summary>
            /// Enum INVALIDREISSUEIMMEDIATEPARTIALFILL for value: INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL
            /// </summary>
            [EnumMember(Value = "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL")]
            INVALIDREISSUEIMMEDIATEPARTIALFILL = 56,

            /// <summary>
            /// Enum TAKEPROFITORDERALREADYEXISTS for value: TAKE_PROFIT_ORDER_ALREADY_EXISTS
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ORDER_ALREADY_EXISTS")]
            TAKEPROFITORDERALREADYEXISTS = 57,

            /// <summary>
            /// Enum TAKEPROFITONFILLPRICEMISSING for value: TAKE_PROFIT_ON_FILL_PRICE_MISSING
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_PRICE_MISSING")]
            TAKEPROFITONFILLPRICEMISSING = 58,

            /// <summary>
            /// Enum TAKEPROFITONFILLPRICEINVALID for value: TAKE_PROFIT_ON_FILL_PRICE_INVALID
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_PRICE_INVALID")]
            TAKEPROFITONFILLPRICEINVALID = 59,

            /// <summary>
            /// Enum TAKEPROFITONFILLPRICEPRECISIONEXCEEDED for value: TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED")]
            TAKEPROFITONFILLPRICEPRECISIONEXCEEDED = 60,

            /// <summary>
            /// Enum TAKEPROFITONFILLTIMEINFORCEMISSING for value: TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING")]
            TAKEPROFITONFILLTIMEINFORCEMISSING = 61,

            /// <summary>
            /// Enum TAKEPROFITONFILLTIMEINFORCEINVALID for value: TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID")]
            TAKEPROFITONFILLTIMEINFORCEINVALID = 62,

            /// <summary>
            /// Enum TAKEPROFITONFILLGTDTIMESTAMPMISSING for value: TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING")]
            TAKEPROFITONFILLGTDTIMESTAMPMISSING = 63,

            /// <summary>
            /// Enum TAKEPROFITONFILLGTDTIMESTAMPINPAST for value: TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST")]
            TAKEPROFITONFILLGTDTIMESTAMPINPAST = 64,

            /// <summary>
            /// Enum TAKEPROFITONFILLCLIENTORDERIDINVALID for value: TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID")]
            TAKEPROFITONFILLCLIENTORDERIDINVALID = 65,

            /// <summary>
            /// Enum TAKEPROFITONFILLCLIENTORDERTAGINVALID for value: TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID")]
            TAKEPROFITONFILLCLIENTORDERTAGINVALID = 66,

            /// <summary>
            /// Enum TAKEPROFITONFILLCLIENTORDERCOMMENTINVALID for value: TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID")]
            TAKEPROFITONFILLCLIENTORDERCOMMENTINVALID = 67,

            /// <summary>
            /// Enum TAKEPROFITONFILLTRIGGERCONDITIONMISSING for value: TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING")]
            TAKEPROFITONFILLTRIGGERCONDITIONMISSING = 68,

            /// <summary>
            /// Enum TAKEPROFITONFILLTRIGGERCONDITIONINVALID for value: TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID
            /// </summary>
            [EnumMember(Value = "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID")]
            TAKEPROFITONFILLTRIGGERCONDITIONINVALID = 69,

            /// <summary>
            /// Enum STOPLOSSORDERALREADYEXISTS for value: STOP_LOSS_ORDER_ALREADY_EXISTS
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_ALREADY_EXISTS")]
            STOPLOSSORDERALREADYEXISTS = 70,

            /// <summary>
            /// Enum STOPLOSSORDERGUARANTEEDREQUIRED for value: STOP_LOSS_ORDER_GUARANTEED_REQUIRED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_REQUIRED")]
            STOPLOSSORDERGUARANTEEDREQUIRED = 71,

            /// <summary>
            /// Enum STOPLOSSORDERGUARANTEEDPRICEWITHINSPREAD for value: STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD")]
            STOPLOSSORDERGUARANTEEDPRICEWITHINSPREAD = 72,

            /// <summary>
            /// Enum STOPLOSSORDERGUARANTEEDNOTALLOWED for value: STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED")]
            STOPLOSSORDERGUARANTEEDNOTALLOWED = 73,

            /// <summary>
            /// Enum STOPLOSSORDERGUARANTEEDHALTEDCREATEVIOLATION for value: STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION")]
            STOPLOSSORDERGUARANTEEDHALTEDCREATEVIOLATION = 74,

            /// <summary>
            /// Enum STOPLOSSORDERGUARANTEEDHALTEDTIGHTENVIOLATION for value: STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION")]
            STOPLOSSORDERGUARANTEEDHALTEDTIGHTENVIOLATION = 75,

            /// <summary>
            /// Enum STOPLOSSORDERGUARANTEEDHEDGINGNOTALLOWED for value: STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED")]
            STOPLOSSORDERGUARANTEEDHEDGINGNOTALLOWED = 76,

            /// <summary>
            /// Enum STOPLOSSORDERGUARANTEEDMINIMUMDISTANCENOTMET for value: STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET")]
            STOPLOSSORDERGUARANTEEDMINIMUMDISTANCENOTMET = 77,

            /// <summary>
            /// Enum STOPLOSSORDERNOTCANCELABLE for value: STOP_LOSS_ORDER_NOT_CANCELABLE
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_NOT_CANCELABLE")]
            STOPLOSSORDERNOTCANCELABLE = 78,

            /// <summary>
            /// Enum STOPLOSSORDERNOTREPLACEABLE for value: STOP_LOSS_ORDER_NOT_REPLACEABLE
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_NOT_REPLACEABLE")]
            STOPLOSSORDERNOTREPLACEABLE = 79,

            /// <summary>
            /// Enum STOPLOSSORDERGUARANTEEDLEVELRESTRICTIONEXCEEDED for value: STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED")]
            STOPLOSSORDERGUARANTEEDLEVELRESTRICTIONEXCEEDED = 80,

            /// <summary>
            /// Enum STOPLOSSORDERPRICEANDDISTANCEBOTHSPECIFIED for value: STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED")]
            STOPLOSSORDERPRICEANDDISTANCEBOTHSPECIFIED = 81,

            /// <summary>
            /// Enum STOPLOSSORDERPRICEANDDISTANCEBOTHMISSING for value: STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING")]
            STOPLOSSORDERPRICEANDDISTANCEBOTHMISSING = 82,

            /// <summary>
            /// Enum STOPLOSSONFILLREQUIREDFORPENDINGORDER for value: STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER")]
            STOPLOSSONFILLREQUIREDFORPENDINGORDER = 83,

            /// <summary>
            /// Enum STOPLOSSONFILLGUARANTEEDNOTALLOWED for value: STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED")]
            STOPLOSSONFILLGUARANTEEDNOTALLOWED = 84,

            /// <summary>
            /// Enum STOPLOSSONFILLGUARANTEEDREQUIRED for value: STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED")]
            STOPLOSSONFILLGUARANTEEDREQUIRED = 85,

            /// <summary>
            /// Enum STOPLOSSONFILLPRICEMISSING for value: STOP_LOSS_ON_FILL_PRICE_MISSING
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_PRICE_MISSING")]
            STOPLOSSONFILLPRICEMISSING = 86,

            /// <summary>
            /// Enum STOPLOSSONFILLPRICEINVALID for value: STOP_LOSS_ON_FILL_PRICE_INVALID
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_PRICE_INVALID")]
            STOPLOSSONFILLPRICEINVALID = 87,

            /// <summary>
            /// Enum STOPLOSSONFILLPRICEPRECISIONEXCEEDED for value: STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED")]
            STOPLOSSONFILLPRICEPRECISIONEXCEEDED = 88,

            /// <summary>
            /// Enum STOPLOSSONFILLGUARANTEEDMINIMUMDISTANCENOTMET for value: STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET")]
            STOPLOSSONFILLGUARANTEEDMINIMUMDISTANCENOTMET = 89,

            /// <summary>
            /// Enum STOPLOSSONFILLGUARANTEEDLEVELRESTRICTIONEXCEEDED for value: STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED")]
            STOPLOSSONFILLGUARANTEEDLEVELRESTRICTIONEXCEEDED = 90,

            /// <summary>
            /// Enum STOPLOSSONFILLDISTANCEINVALID for value: STOP_LOSS_ON_FILL_DISTANCE_INVALID
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_DISTANCE_INVALID")]
            STOPLOSSONFILLDISTANCEINVALID = 91,

            /// <summary>
            /// Enum STOPLOSSONFILLPRICEDISTANCEMAXIMUMEXCEEDED for value: STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED")]
            STOPLOSSONFILLPRICEDISTANCEMAXIMUMEXCEEDED = 92,

            /// <summary>
            /// Enum STOPLOSSONFILLDISTANCEPRECISIONEXCEEDED for value: STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED")]
            STOPLOSSONFILLDISTANCEPRECISIONEXCEEDED = 93,

            /// <summary>
            /// Enum STOPLOSSONFILLPRICEANDDISTANCEBOTHSPECIFIED for value: STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED")]
            STOPLOSSONFILLPRICEANDDISTANCEBOTHSPECIFIED = 94,

            /// <summary>
            /// Enum STOPLOSSONFILLPRICEANDDISTANCEBOTHMISSING for value: STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING")]
            STOPLOSSONFILLPRICEANDDISTANCEBOTHMISSING = 95,

            /// <summary>
            /// Enum STOPLOSSONFILLTIMEINFORCEMISSING for value: STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING")]
            STOPLOSSONFILLTIMEINFORCEMISSING = 96,

            /// <summary>
            /// Enum STOPLOSSONFILLTIMEINFORCEINVALID for value: STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID")]
            STOPLOSSONFILLTIMEINFORCEINVALID = 97,

            /// <summary>
            /// Enum STOPLOSSONFILLGTDTIMESTAMPMISSING for value: STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING")]
            STOPLOSSONFILLGTDTIMESTAMPMISSING = 98,

            /// <summary>
            /// Enum STOPLOSSONFILLGTDTIMESTAMPINPAST for value: STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST")]
            STOPLOSSONFILLGTDTIMESTAMPINPAST = 99,

            /// <summary>
            /// Enum STOPLOSSONFILLCLIENTORDERIDINVALID for value: STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID")]
            STOPLOSSONFILLCLIENTORDERIDINVALID = 100,

            /// <summary>
            /// Enum STOPLOSSONFILLCLIENTORDERTAGINVALID for value: STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID")]
            STOPLOSSONFILLCLIENTORDERTAGINVALID = 101,

            /// <summary>
            /// Enum STOPLOSSONFILLCLIENTORDERCOMMENTINVALID for value: STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID")]
            STOPLOSSONFILLCLIENTORDERCOMMENTINVALID = 102,

            /// <summary>
            /// Enum STOPLOSSONFILLTRIGGERCONDITIONMISSING for value: STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING")]
            STOPLOSSONFILLTRIGGERCONDITIONMISSING = 103,

            /// <summary>
            /// Enum STOPLOSSONFILLTRIGGERCONDITIONINVALID for value: STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID
            /// </summary>
            [EnumMember(Value = "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID")]
            STOPLOSSONFILLTRIGGERCONDITIONINVALID = 104,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSORDERALREADYEXISTS for value: TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS")]
            TRAILINGSTOPLOSSORDERALREADYEXISTS = 105,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSONFILLPRICEDISTANCEMISSING for value: TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING")]
            TRAILINGSTOPLOSSONFILLPRICEDISTANCEMISSING = 106,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSONFILLPRICEDISTANCEINVALID for value: TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID")]
            TRAILINGSTOPLOSSONFILLPRICEDISTANCEINVALID = 107,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSONFILLPRICEDISTANCEPRECISIONEXCEEDED for value: TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED")]
            TRAILINGSTOPLOSSONFILLPRICEDISTANCEPRECISIONEXCEEDED = 108,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSONFILLPRICEDISTANCEMAXIMUMEXCEEDED for value: TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED")]
            TRAILINGSTOPLOSSONFILLPRICEDISTANCEMAXIMUMEXCEEDED = 109,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSONFILLPRICEDISTANCEMINIMUMNOTMET for value: TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET")]
            TRAILINGSTOPLOSSONFILLPRICEDISTANCEMINIMUMNOTMET = 110,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSONFILLTIMEINFORCEMISSING for value: TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING")]
            TRAILINGSTOPLOSSONFILLTIMEINFORCEMISSING = 111,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSONFILLTIMEINFORCEINVALID for value: TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID")]
            TRAILINGSTOPLOSSONFILLTIMEINFORCEINVALID = 112,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSONFILLGTDTIMESTAMPMISSING for value: TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING")]
            TRAILINGSTOPLOSSONFILLGTDTIMESTAMPMISSING = 113,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSONFILLGTDTIMESTAMPINPAST for value: TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST")]
            TRAILINGSTOPLOSSONFILLGTDTIMESTAMPINPAST = 114,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSONFILLCLIENTORDERIDINVALID for value: TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID")]
            TRAILINGSTOPLOSSONFILLCLIENTORDERIDINVALID = 115,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSONFILLCLIENTORDERTAGINVALID for value: TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID")]
            TRAILINGSTOPLOSSONFILLCLIENTORDERTAGINVALID = 116,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSONFILLCLIENTORDERCOMMENTINVALID for value: TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID")]
            TRAILINGSTOPLOSSONFILLCLIENTORDERCOMMENTINVALID = 117,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSORDERSNOTSUPPORTED for value: TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED")]
            TRAILINGSTOPLOSSORDERSNOTSUPPORTED = 118,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSONFILLTRIGGERCONDITIONMISSING for value: TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING")]
            TRAILINGSTOPLOSSONFILLTRIGGERCONDITIONMISSING = 119,

            /// <summary>
            /// Enum TRAILINGSTOPLOSSONFILLTRIGGERCONDITIONINVALID for value: TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID
            /// </summary>
            [EnumMember(Value = "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID")]
            TRAILINGSTOPLOSSONFILLTRIGGERCONDITIONINVALID = 120,

            /// <summary>
            /// Enum CLOSETRADETYPEMISSING for value: CLOSE_TRADE_TYPE_MISSING
            /// </summary>
            [EnumMember(Value = "CLOSE_TRADE_TYPE_MISSING")]
            CLOSETRADETYPEMISSING = 121,

            /// <summary>
            /// Enum CLOSETRADEPARTIALUNITSMISSING for value: CLOSE_TRADE_PARTIAL_UNITS_MISSING
            /// </summary>
            [EnumMember(Value = "CLOSE_TRADE_PARTIAL_UNITS_MISSING")]
            CLOSETRADEPARTIALUNITSMISSING = 122,

            /// <summary>
            /// Enum CLOSETRADEUNITSEXCEEDTRADESIZE for value: CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE
            /// </summary>
            [EnumMember(Value = "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE")]
            CLOSETRADEUNITSEXCEEDTRADESIZE = 123,

            /// <summary>
            /// Enum CLOSEOUTPOSITIONDOESNTEXIST for value: CLOSEOUT_POSITION_DOESNT_EXIST
            /// </summary>
            [EnumMember(Value = "CLOSEOUT_POSITION_DOESNT_EXIST")]
            CLOSEOUTPOSITIONDOESNTEXIST = 124,

            /// <summary>
            /// Enum CLOSEOUTPOSITIONINCOMPLETESPECIFICATION for value: CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION
            /// </summary>
            [EnumMember(Value = "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION")]
            CLOSEOUTPOSITIONINCOMPLETESPECIFICATION = 125,

            /// <summary>
            /// Enum CLOSEOUTPOSITIONUNITSEXCEEDPOSITIONSIZE for value: CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE
            /// </summary>
            [EnumMember(Value = "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE")]
            CLOSEOUTPOSITIONUNITSEXCEEDPOSITIONSIZE = 126,

            /// <summary>
            /// Enum CLOSEOUTPOSITIONREJECT for value: CLOSEOUT_POSITION_REJECT
            /// </summary>
            [EnumMember(Value = "CLOSEOUT_POSITION_REJECT")]
            CLOSEOUTPOSITIONREJECT = 127,

            /// <summary>
            /// Enum CLOSEOUTPOSITIONPARTIALUNITSMISSING for value: CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING
            /// </summary>
            [EnumMember(Value = "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING")]
            CLOSEOUTPOSITIONPARTIALUNITSMISSING = 128,

            /// <summary>
            /// Enum MARKUPGROUPIDINVALID for value: MARKUP_GROUP_ID_INVALID
            /// </summary>
            [EnumMember(Value = "MARKUP_GROUP_ID_INVALID")]
            MARKUPGROUPIDINVALID = 129,

            /// <summary>
            /// Enum POSITIONAGGREGATIONMODEINVALID for value: POSITION_AGGREGATION_MODE_INVALID
            /// </summary>
            [EnumMember(Value = "POSITION_AGGREGATION_MODE_INVALID")]
            POSITIONAGGREGATIONMODEINVALID = 130,

            /// <summary>
            /// Enum ADMINCONFIGUREDATAMISSING for value: ADMIN_CONFIGURE_DATA_MISSING
            /// </summary>
            [EnumMember(Value = "ADMIN_CONFIGURE_DATA_MISSING")]
            ADMINCONFIGUREDATAMISSING = 131,

            /// <summary>
            /// Enum MARGINRATEINVALID for value: MARGIN_RATE_INVALID
            /// </summary>
            [EnumMember(Value = "MARGIN_RATE_INVALID")]
            MARGINRATEINVALID = 132,

            /// <summary>
            /// Enum MARGINRATEWOULDTRIGGERCLOSEOUT for value: MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT
            /// </summary>
            [EnumMember(Value = "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT")]
            MARGINRATEWOULDTRIGGERCLOSEOUT = 133,

            /// <summary>
            /// Enum ALIASINVALID for value: ALIAS_INVALID
            /// </summary>
            [EnumMember(Value = "ALIAS_INVALID")]
            ALIASINVALID = 134,

            /// <summary>
            /// Enum CLIENTCONFIGUREDATAMISSING for value: CLIENT_CONFIGURE_DATA_MISSING
            /// </summary>
            [EnumMember(Value = "CLIENT_CONFIGURE_DATA_MISSING")]
            CLIENTCONFIGUREDATAMISSING = 135,

            /// <summary>
            /// Enum MARGINRATEWOULDTRIGGERMARGINCALL for value: MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL
            /// </summary>
            [EnumMember(Value = "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL")]
            MARGINRATEWOULDTRIGGERMARGINCALL = 136,

            /// <summary>
            /// Enum AMOUNTINVALID for value: AMOUNT_INVALID
            /// </summary>
            [EnumMember(Value = "AMOUNT_INVALID")]
            AMOUNTINVALID = 137,

            /// <summary>
            /// Enum INSUFFICIENTFUNDS for value: INSUFFICIENT_FUNDS
            /// </summary>
            [EnumMember(Value = "INSUFFICIENT_FUNDS")]
            INSUFFICIENTFUNDS = 138,

            /// <summary>
            /// Enum AMOUNTMISSING for value: AMOUNT_MISSING
            /// </summary>
            [EnumMember(Value = "AMOUNT_MISSING")]
            AMOUNTMISSING = 139,

            /// <summary>
            /// Enum FUNDINGREASONMISSING for value: FUNDING_REASON_MISSING
            /// </summary>
            [EnumMember(Value = "FUNDING_REASON_MISSING")]
            FUNDINGREASONMISSING = 140,

            /// <summary>
            /// Enum CLIENTEXTENSIONSDATAMISSING for value: CLIENT_EXTENSIONS_DATA_MISSING
            /// </summary>
            [EnumMember(Value = "CLIENT_EXTENSIONS_DATA_MISSING")]
            CLIENTEXTENSIONSDATAMISSING = 141,

            /// <summary>
            /// Enum REPLACINGORDERINVALID for value: REPLACING_ORDER_INVALID
            /// </summary>
            [EnumMember(Value = "REPLACING_ORDER_INVALID")]
            REPLACINGORDERINVALID = 142,

            /// <summary>
            /// Enum REPLACINGTRADEIDINVALID for value: REPLACING_TRADE_ID_INVALID
            /// </summary>
            [EnumMember(Value = "REPLACING_TRADE_ID_INVALID")]
            REPLACINGTRADEIDINVALID = 143

        }

        /// <summary>
        /// The reason that the Reject Transaction was created
        /// </summary>
        /// <value>The reason that the Reject Transaction was created</value>
        [DataMember(Name="rejectReason", EmitDefaultValue=false)]
        public RejectReasonEnum? RejectReason { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderClientExtensionsModifyRejectTransaction" /> class.
        /// </summary>
        /// <param name="id">The Transaction&#39;s Identifier..</param>
        /// <param name="time">A date and time value using either RFC3339 or UNIX time representation. The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)..</param>
        /// <param name="userID">The ID of the user that initiated the creation of the Transaction..</param>
        /// <param name="accountID">The Account&#39;s identifier.</param>
        /// <param name="batchID">The ID of the \&quot;batch\&quot; that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously..</param>
        /// <param name="requestID">The Request ID of the request which generated the transaction..</param>
        /// <param name="type">The Type of the Transaction..</param>
        /// <param name="rejectReason">The reason that the Reject Transaction was created.</param>
        /// <param name="orderID">The ID of the Order who&#39;s client extensions are to be modified..</param>
        /// <param name="clientOrderID">The original Client ID of the Order who&#39;s client extensions are to be modified..</param>
        /// <param name="clientExtensionsModify">clientExtensionsModify.</param>
        /// <param name="tradeClientExtensionsModify">tradeClientExtensionsModify.</param>
        public OrderClientExtensionsModifyRejectTransaction(int id = default(int), string time = default(string), int userID = default(int), string accountID = default(string), int batchID = default(int), string requestID = default(string), TypeEnum? type = default(TypeEnum?), RejectReasonEnum? rejectReason = default(RejectReasonEnum?), int orderID = default(int), string clientOrderID = default(string), InlineResponse2005ChangesClientExtensions clientExtensionsModify = default(InlineResponse2005ChangesClientExtensions), InlineResponse2005ChangesClientExtensions tradeClientExtensionsModify = default(InlineResponse2005ChangesClientExtensions)) : base()
        {
            this.Id = id;
            this.Time = time;
            this.UserID = userID;
            this.AccountID = accountID;
            this.BatchID = batchID;
            this.RequestID = requestID;
            this.Type = type;
            this.RejectReason = rejectReason;
        }
        
        /// <summary>
        /// The Transaction&#39;s Identifier.
        /// </summary>
        /// <value>The Transaction&#39;s Identifier.</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int Id { get; set; }

        /// <summary>
        /// A date and time value using either RFC3339 or UNIX time representation. The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places).
        /// </summary>
        /// <value>A date and time value using either RFC3339 or UNIX time representation. The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places).</value>
        [DataMember(Name="time", EmitDefaultValue=false)]
        public string Time { get; set; }

        /// <summary>
        /// The ID of the user that initiated the creation of the Transaction.
        /// </summary>
        /// <value>The ID of the user that initiated the creation of the Transaction.</value>
        [DataMember(Name="userID", EmitDefaultValue=false)]
        public int UserID { get; set; }

        /// <summary>
        /// The Account&#39;s identifier
        /// </summary>
        /// <value>The Account&#39;s identifier</value>
        [DataMember(Name="accountID", EmitDefaultValue=false)]
        public string AccountID { get; set; }

        /// <summary>
        /// The ID of the \&quot;batch\&quot; that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.
        /// </summary>
        /// <value>The ID of the \&quot;batch\&quot; that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.</value>
        [DataMember(Name="batchID", EmitDefaultValue=false)]
        public int BatchID { get; set; }

        /// <summary>
        /// The Request ID of the request which generated the transaction.
        /// </summary>
        /// <value>The Request ID of the request which generated the transaction.</value>
        [DataMember(Name="requestID", EmitDefaultValue=false)]
        public string RequestID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrderClientExtensionsModifyRejectTransaction {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Time: ").Append(Time).Append("\n");
            sb.Append("  UserID: ").Append(UserID).Append("\n");
            sb.Append("  AccountID: ").Append(AccountID).Append("\n");
            sb.Append("  BatchID: ").Append(BatchID).Append("\n");
            sb.Append("  RequestID: ").Append(RequestID).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  RejectReason: ").Append(RejectReason).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderClientExtensionsModifyRejectTransaction);
        }

        /// <summary>
        /// Returns true if OrderClientExtensionsModifyRejectTransaction instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderClientExtensionsModifyRejectTransaction to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderClientExtensionsModifyRejectTransaction input)
        {
            if (input == null)
                return false;

            return base.Equals(input) && 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                ) && base.Equals(input) && 
                (
                    this.Time == input.Time ||
                    (this.Time != null &&
                    this.Time.Equals(input.Time))
                ) && base.Equals(input) && 
                (
                    this.UserID == input.UserID ||
                    this.UserID.Equals(input.UserID)
                ) && base.Equals(input) && 
                (
                    this.AccountID == input.AccountID ||
                    (this.AccountID != null &&
                    this.AccountID.Equals(input.AccountID))
                ) && base.Equals(input) && 
                (
                    this.BatchID == input.BatchID ||
                    this.BatchID.Equals(input.BatchID)
                ) && base.Equals(input) && 
                (
                    this.RequestID == input.RequestID ||
                    (this.RequestID != null &&
                    this.RequestID.Equals(input.RequestID))
                ) && base.Equals(input) && 
                (
                    this.Type == input.Type ||
                    this.Type.Equals(input.Type)
                ) && base.Equals(input) && 
                (
                    this.RejectReason == input.RejectReason ||
                    this.RejectReason.Equals(input.RejectReason)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = base.GetHashCode();
                hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Time != null)
                    hashCode = hashCode * 59 + this.Time.GetHashCode();
                hashCode = hashCode * 59 + this.UserID.GetHashCode();
                if (this.AccountID != null)
                    hashCode = hashCode * 59 + this.AccountID.GetHashCode();
                hashCode = hashCode * 59 + this.BatchID.GetHashCode();
                if (this.RequestID != null)
                    hashCode = hashCode * 59 + this.RequestID.GetHashCode();
                hashCode = hashCode * 59 + this.Type.GetHashCode();
                hashCode = hashCode * 59 + this.RejectReason.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            
            // Time (string) pattern
            Regex regexTime = new Regex(@"^(?:(?:\\d+(?:\\.\\d{1,9})?)|(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d{1,9})?(?:Z|[+-][01]\\d:[0-5]\\d))$", RegexOptions.CultureInvariant);
            if (false == regexTime.Match(this.Time).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Time, must match a pattern of " + regexTime, new [] { "Time" });
            }

            // AccountID (string) pattern
            Regex regexAccountID = new Regex(@"^\\d+-\\d+-\\d+-\\d+$", RegexOptions.CultureInvariant);
            if (false == regexAccountID.Match(this.AccountID).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for AccountID, must match a pattern of " + regexAccountID, new [] { "AccountID" });
            }

            yield break;
        }
    }

}
