/* 
 * OANDA v20 API
 *
 * The full OANDA v20 API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = GeriRemenyi.Oanda.V20.Client.OpenAPIDateConverter;

namespace GeriRemenyi.Oanda.V20.Model
{
    /// <summary>
    /// InlineObject6
    /// </summary>
    [DataContract]
    public partial class InlineObject6 :  IEquatable<InlineObject6>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineObject6" /> class.
        /// </summary>
        /// <param name="takeProfit">takeProfit.</param>
        /// <param name="stopLoss">stopLoss.</param>
        /// <param name="trailingStopLoss">trailingStopLoss.</param>
        public InlineObject6(AccountsAccountIDTradesTradeSpecifierOrdersTakeProfit takeProfit = default(AccountsAccountIDTradesTradeSpecifierOrdersTakeProfit), AccountsAccountIDTradesTradeSpecifierOrdersStopLoss stopLoss = default(AccountsAccountIDTradesTradeSpecifierOrdersStopLoss), AccountsAccountIDTradesTradeSpecifierOrdersTrailingStopLoss trailingStopLoss = default(AccountsAccountIDTradesTradeSpecifierOrdersTrailingStopLoss))
        {
            this.TakeProfit = takeProfit;
            this.StopLoss = stopLoss;
            this.TrailingStopLoss = trailingStopLoss;
        }
        
        /// <summary>
        /// Gets or Sets TakeProfit
        /// </summary>
        [DataMember(Name="takeProfit", EmitDefaultValue=false)]
        public AccountsAccountIDTradesTradeSpecifierOrdersTakeProfit TakeProfit { get; set; }

        /// <summary>
        /// Gets or Sets StopLoss
        /// </summary>
        [DataMember(Name="stopLoss", EmitDefaultValue=false)]
        public AccountsAccountIDTradesTradeSpecifierOrdersStopLoss StopLoss { get; set; }

        /// <summary>
        /// Gets or Sets TrailingStopLoss
        /// </summary>
        [DataMember(Name="trailingStopLoss", EmitDefaultValue=false)]
        public AccountsAccountIDTradesTradeSpecifierOrdersTrailingStopLoss TrailingStopLoss { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineObject6 {\n");
            sb.Append("  TakeProfit: ").Append(TakeProfit).Append("\n");
            sb.Append("  StopLoss: ").Append(StopLoss).Append("\n");
            sb.Append("  TrailingStopLoss: ").Append(TrailingStopLoss).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineObject6);
        }

        /// <summary>
        /// Returns true if InlineObject6 instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineObject6 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineObject6 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TakeProfit == input.TakeProfit ||
                    (this.TakeProfit != null &&
                    this.TakeProfit.Equals(input.TakeProfit))
                ) && 
                (
                    this.StopLoss == input.StopLoss ||
                    (this.StopLoss != null &&
                    this.StopLoss.Equals(input.StopLoss))
                ) && 
                (
                    this.TrailingStopLoss == input.TrailingStopLoss ||
                    (this.TrailingStopLoss != null &&
                    this.TrailingStopLoss.Equals(input.TrailingStopLoss))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TakeProfit != null)
                    hashCode = hashCode * 59 + this.TakeProfit.GetHashCode();
                if (this.StopLoss != null)
                    hashCode = hashCode * 59 + this.StopLoss.GetHashCode();
                if (this.TrailingStopLoss != null)
                    hashCode = hashCode * 59 + this.TrailingStopLoss.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
