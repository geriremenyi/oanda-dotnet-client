/* 
 * OANDA v20 API
 *
 * The full OANDA v20 API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using GeriRemenyi.Oanda.V20.Client;
using GeriRemenyi.Oanda.V20.Api;
using GeriRemenyi.Oanda.V20.Model;

namespace GeriRemenyi.Oanda.V20.Test
{
    /// <summary>
    ///  Class for testing TransactionApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TransactionApiTests : IDisposable
    {
        private TransactionApi instance;

        public TransactionApiTests()
        {
            instance = new TransactionApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TransactionApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TransactionApi
            //Assert.IsType(typeof(TransactionApi), instance, "instance is a TransactionApi");
        }

        
        /// <summary>
        /// Test AccountsAccountIDTransactionsGet
        /// </summary>
        [Fact]
        public void AccountsAccountIDTransactionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string acceptDatetimeFormat = null;
            //string from = null;
            //string to = null;
            //int? pageSize = null;
            //List<string> type = null;
            //var response = instance.AccountsAccountIDTransactionsGet(accountID, acceptDatetimeFormat, from, to, pageSize, type);
            //Assert.IsType<InlineResponse20018> (response, "response is InlineResponse20018");
        }
        
        /// <summary>
        /// Test AccountsAccountIDTransactionsIdrangeGet
        /// </summary>
        [Fact]
        public void AccountsAccountIDTransactionsIdrangeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //int from = null;
            //int to = null;
            //string acceptDatetimeFormat = null;
            //List<string> type = null;
            //var response = instance.AccountsAccountIDTransactionsIdrangeGet(accountID, from, to, acceptDatetimeFormat, type);
            //Assert.IsType<InlineResponse20020> (response, "response is InlineResponse20020");
        }
        
        /// <summary>
        /// Test AccountsAccountIDTransactionsSinceidGet
        /// </summary>
        [Fact]
        public void AccountsAccountIDTransactionsSinceidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //int id = null;
            //string acceptDatetimeFormat = null;
            //var response = instance.AccountsAccountIDTransactionsSinceidGet(accountID, id, acceptDatetimeFormat);
            //Assert.IsType<InlineResponse20020> (response, "response is InlineResponse20020");
        }
        
        /// <summary>
        /// Test AccountsAccountIDTransactionsTransactionIDGet
        /// </summary>
        [Fact]
        public void AccountsAccountIDTransactionsTransactionIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //int transactionID = null;
            //string acceptDatetimeFormat = null;
            //var response = instance.AccountsAccountIDTransactionsTransactionIDGet(accountID, transactionID, acceptDatetimeFormat);
            //Assert.IsType<InlineResponse20019> (response, "response is InlineResponse20019");
        }
        
    }

}
