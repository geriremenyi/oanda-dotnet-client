/* 
 * OANDA v20 API
 *
 * The full OANDA v20 API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using GeriRemenyi.Oanda.V20.Api;
using GeriRemenyi.Oanda.V20.Model;
using GeriRemenyi.Oanda.V20.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace GeriRemenyi.Oanda.V20.Test
{
    /// <summary>
    ///  Class for testing InlineResponse20021Prices
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class InlineResponse20021PricesTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for InlineResponse20021Prices
        //private InlineResponse20021Prices instance;

        public InlineResponse20021PricesTests()
        {
            // TODO uncomment below to create an instance of InlineResponse20021Prices
            //instance = new InlineResponse20021Prices();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InlineResponse20021Prices
        /// </summary>
        [Fact]
        public void InlineResponse20021PricesInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" InlineResponse20021Prices
            //Assert.IsInstanceOfType<InlineResponse20021Prices> (instance, "variable 'instance' is a InlineResponse20021Prices");
        }


        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Instrument'
        /// </summary>
        [Fact]
        public void InstrumentTest()
        {
            // TODO unit test for the property 'Instrument'
        }
        /// <summary>
        /// Test the property 'Time'
        /// </summary>
        [Fact]
        public void TimeTest()
        {
            // TODO unit test for the property 'Time'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'Tradeable'
        /// </summary>
        [Fact]
        public void TradeableTest()
        {
            // TODO unit test for the property 'Tradeable'
        }
        /// <summary>
        /// Test the property 'Bids'
        /// </summary>
        [Fact]
        public void BidsTest()
        {
            // TODO unit test for the property 'Bids'
        }
        /// <summary>
        /// Test the property 'Asks'
        /// </summary>
        [Fact]
        public void AsksTest()
        {
            // TODO unit test for the property 'Asks'
        }
        /// <summary>
        /// Test the property 'CloseoutBid'
        /// </summary>
        [Fact]
        public void CloseoutBidTest()
        {
            // TODO unit test for the property 'CloseoutBid'
        }
        /// <summary>
        /// Test the property 'CloseoutAsk'
        /// </summary>
        [Fact]
        public void CloseoutAskTest()
        {
            // TODO unit test for the property 'CloseoutAsk'
        }
        /// <summary>
        /// Test the property 'QuoteHomeConversionFactors'
        /// </summary>
        [Fact]
        public void QuoteHomeConversionFactorsTest()
        {
            // TODO unit test for the property 'QuoteHomeConversionFactors'
        }
        /// <summary>
        /// Test the property 'UnitsAvailable'
        /// </summary>
        [Fact]
        public void UnitsAvailableTest()
        {
            // TODO unit test for the property 'UnitsAvailable'
        }

    }

}
