/* 
 * OANDA v20 API
 *
 * The full OANDA v20 API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using GeriRemenyi.Oanda.V20.Api;
using GeriRemenyi.Oanda.V20.Model;
using GeriRemenyi.Oanda.V20.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace GeriRemenyi.Oanda.V20.Test
{
    /// <summary>
    ///  Class for testing InlineResponse20021QuoteHomeConversionFactors
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class InlineResponse20021QuoteHomeConversionFactorsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for InlineResponse20021QuoteHomeConversionFactors
        //private InlineResponse20021QuoteHomeConversionFactors instance;

        public InlineResponse20021QuoteHomeConversionFactorsTests()
        {
            // TODO uncomment below to create an instance of InlineResponse20021QuoteHomeConversionFactors
            //instance = new InlineResponse20021QuoteHomeConversionFactors();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InlineResponse20021QuoteHomeConversionFactors
        /// </summary>
        [Fact]
        public void InlineResponse20021QuoteHomeConversionFactorsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" InlineResponse20021QuoteHomeConversionFactors
            //Assert.IsInstanceOfType<InlineResponse20021QuoteHomeConversionFactors> (instance, "variable 'instance' is a InlineResponse20021QuoteHomeConversionFactors");
        }


        /// <summary>
        /// Test the property 'PositiveUnits'
        /// </summary>
        [Fact]
        public void PositiveUnitsTest()
        {
            // TODO unit test for the property 'PositiveUnits'
        }
        /// <summary>
        /// Test the property 'NegativeUnits'
        /// </summary>
        [Fact]
        public void NegativeUnitsTest()
        {
            // TODO unit test for the property 'NegativeUnits'
        }

    }

}
